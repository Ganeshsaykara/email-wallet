{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tick",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_maxPerMint",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "freeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "freeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "153:440:125:-:0;;;209:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;285:4;291;2046:5:15;:13;285:4:125;2046:5:15;:13;:::i;:::-;-1:-1:-1;2069:7:15;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;;307:10:125::1;:24:::0;-1:-1:-1;153:440:125;;-1:-1:-1;153:440:125;14:127:188;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:188;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:188;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:188:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:188;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:188;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2221:448;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:188;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:188;;;4053:26;4004:89;-1:-1:-1;;2808:1:188;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:188;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:188;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:188;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:188:o;:::-;153:440:125;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c5780639883566e116100665780639883566e146101bf578063a457c2d7146101d2578063a9059cbb146101e5578063dd62ed3e146101f857600080fd5b806370a082311461016c5780637c928fe9146101a257806395d89b41146101b757600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a578063395093511461015957600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec61023e565b6040516100f99190610ac0565b60405180910390f35b610115610110366004610b55565b6102d0565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610b7f565b6102ea565b604051601281526020016100f9565b610115610167366004610b55565b61030e565b61012961017a366004610bbb565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101b56101b0366004610bdd565b61035a565b005b6100ec610367565b6101b56101cd366004610b55565b610376565b6101156101e0366004610b55565b6103f5565b6101156101f3366004610b55565b6104c6565b610129610206366004610bf6565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024d90610c29565b80601f016020809104026020016040519081016040528092919081815260200182805461027990610c29565b80156102c65780601f1061029b576101008083540402835291602001916102c6565b820191906000526020600020905b8154815290600101906020018083116102a957829003601f168201915b5050505050905090565b6000336102de8185856104d4565b60019150505b92915050565b6000336102f8858285610687565b61030385858561075e565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102de9082908690610355908790610c7c565b6104d4565b6103643382610376565b50565b60606004805461024d90610c29565b6005548111156103e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f616d6f756e742065786365656473206d61785065724d696e740000000000000060448201526064015b60405180910390fd5b6103f182826109cd565b5050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156104b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103de565b61030382868684036104d4565b6000336102de81858561075e565b73ffffffffffffffffffffffffffffffffffffffff8316610576576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103de565b73ffffffffffffffffffffffffffffffffffffffff8216610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103de565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610758578181101561074b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103de565b61075884848484036104d4565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103de565b73ffffffffffffffffffffffffffffffffffffffff82166108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103de565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103de565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610758565b73ffffffffffffffffffffffffffffffffffffffff8216610a4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103de565b8060026000828254610a5c9190610c7c565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610aed57858101830151858201604001528201610ad1565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b5057600080fd5b919050565b60008060408385031215610b6857600080fd5b610b7183610b2c565b946020939093013593505050565b600080600060608486031215610b9457600080fd5b610b9d84610b2c565b9250610bab60208501610b2c565b9150604084013590509250925092565b600060208284031215610bcd57600080fd5b610bd682610b2c565b9392505050565b600060208284031215610bef57600080fd5b5035919050565b60008060408385031215610c0957600080fd5b610c1283610b2c565b9150610c2060208401610b2c565b90509250929050565b600181811c90821680610c3d57607f821691505b602082108103610c76577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212202693159baabaef988904988457eb88f0e2e417cfdf6f33c4d97d122e1bb1199064736f6c63430008150033",
    "sourceMap": "153:440:125:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:188;;1244:22;1226:41;;1214:2;1199:18;4444:197:15;1086:187:188;3255:106:15;3342:12;;3255:106;;;1424:25:188;;;1412:2;1397:18;3255:106:15;1278:177:188;5203:256:15;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1935:36:188;;1923:2;1908:18;3104:91:15;1793:184:188;5854:234:15;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;3519:18;;3493:7;3519:18;;;;;;;;;;;;3419:125;344:86:125;;;;;;:::i;:::-;;:::i;:::-;;2369:102:15;;;:::i;436:155:125:-;;;;;;:::i;:::-;;:::i;6575:427:15:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;4102:18;;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:26;4581:32:15;719:10:26;4597:7:15;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:26;5356:38:15;5372:4;719:10:26;5387:6:15;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:15;;5203:256;-1:-1:-1;;;;5203:256:15:o;5854:234::-;719:10:26;5942:4:15;4102:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5942:4;;719:10:26;5996:64:15;;719:10:26;;4102:27:15;;6021:38;;6049:10;;6021:38;:::i;:::-;5996:8;:64::i;344:86:125:-;395:28;404:10;416:6;395:8;:28::i;:::-;344:86;:::o;2369:102:15:-;2425:13;2457:7;2450:14;;;;;:::i;436:155:125:-;517:10;;507:6;:20;;499:58;;;;;;;3551:2:188;499:58:125;;;3533:21:188;3590:2;3570:18;;;3563:30;3629:27;3609:18;;;3602:55;3674:18;;499:58:125;;;;;;;;;567:17;573:2;577:6;567:5;:17::i;:::-;436:155;;:::o;6575:427:15:-;719:10:26;6668:4:15;4102:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6668:4;;719:10:26;6812:15:15;6792:16;:35;;6784:85;;;;;;;3905:2:188;6784:85:15;;;3887:21:188;3944:2;3924:18;;;3917:30;3983:34;3963:18;;;3956:62;4054:7;4034:18;;;4027:35;4079:19;;6784:85:15;3703:401:188;6784:85:15;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:26;3873:28:15;719:10:26;3890:2:15;3894:6;3873:9;:28::i;10457:340::-;10558:19;;;10550:68;;;;;;;4311:2:188;10550:68:15;;;4293:21:188;4350:2;4330:18;;;4323:30;4389:34;4369:18;;;4362:62;4460:6;4440:18;;;4433:34;4484:19;;10550:68:15;4109:400:188;10550:68:15;10636:21;;;10628:68;;;;;;;4716:2:188;10628:68:15;;;4698:21:188;4755:2;4735:18;;;4728:30;4794:34;4774:18;;;4767:62;4865:4;4845:18;;;4838:32;4887:19;;10628:68:15;4514:398:188;10628:68:15;10707:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1424:25:188;;;10758:32:15;;1397:18:188;10758:32:15;;;;;;;10457:340;;;:::o;11078:411::-;4102:18;;;;11178:24;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11264:17;11244:37;;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;5119:2:188;11297:68:15;;;5101:21:188;5158:2;5138:18;;;5131:30;5197:31;5177:18;;;5170:59;5246:18;;11297:68:15;4917:353:188;11297:68:15;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;7552:18;;;7544:68;;;;;;;5477:2:188;7544:68:15;;;5459:21:188;5516:2;5496:18;;;5489:30;5555:34;5535:18;;;5528:62;5626:7;5606:18;;;5599:35;5651:19;;7544:68:15;5275:401:188;7544:68:15;7630:16;;;7622:64;;;;;;;5883:2:188;7622:64:15;;;5865:21:188;5922:2;5902:18;;;5895:30;5961:34;5941:18;;;5934:62;6032:5;6012:18;;;6005:33;6055:19;;7622:64:15;5681:399:188;7622:64:15;7768:15;;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;;;;6287:2:188;7793:72:15;;;6269:21:188;6326:2;6306:18;;;6299:30;6365:34;6345:18;;;6338:62;6436:8;6416:18;;;6409:36;6462:19;;7793:72:15;6085:402:188;7793:72:15;7899:15;;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1424:25:188;;;8114:13:15;;8163:26;;1397:18:188;8163:26:15;;;;;;;8200:37;12073:91;8520:535;8603:21;;;8595:65;;;;;;;6694:2:188;8595:65:15;;;6676:21:188;6733:2;6713:18;;;6706:30;6772:33;6752:18;;;6745:61;6823:18;;8595:65:15;6492:355:188;8595:65:15;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8899:18:15;;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1424:25:188;;;8952:37:15;;1397:18:188;8952:37:15;;;;;;;436:155:125;;:::o;14:607:188:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:188:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:186::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;1982:186;-1:-1:-1;;;1982:186:188:o;2173:180::-;2232:6;2285:2;2273:9;2264:7;2260:23;2256:32;2253:52;;;2301:1;2298;2291:12;2253:52;-1:-1:-1;2324:23:188;;2173:180;-1:-1:-1;2173:180:188:o;2358:260::-;2426:6;2434;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2526:29;2545:9;2526:29;:::i;:::-;2516:39;;2574:38;2608:2;2597:9;2593:18;2574:38;:::i;:::-;2564:48;;2358:260;;;;;:::o;2623:437::-;2702:1;2698:12;;;;2745;;;2766:61;;2820:4;2812:6;2808:17;2798:27;;2766:61;2873:2;2865:6;2862:14;2842:18;2839:38;2836:218;;2910:77;2907:1;2900:88;3011:4;3008:1;3001:15;3039:4;3036:1;3029:15;2836:218;;2623:437;;;:::o;3065:279::-;3130:9;;;3151:10;;;3148:190;;;3194:77;3191:1;3184:88;3295:4;3292:1;3285:15;3323:4;3320:1;3313:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "freeMint(address,uint256)": "9883566e",
    "freeMint(uint256)": "7c928fe9",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tick\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxPerMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"freeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"freeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployTestToken.s.sol\":\"TestERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@gnosis.pm/=../../node_modules/@gnosis.pm/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@uniswap/=../../node_modules/@uniswap/\",\":@zk-email/=../../node_modules/@zk-email/\",\":accountabstraction/=../../node_modules/accountabstraction/\",\":base64-sol/=../../node_modules/base64-sol/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/\",\":solady/=../../node_modules/solady/src/\"]},\"sources\":{\"../../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"../../node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"../../node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"../../node_modules/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"../../node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85\",\"dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj\"]},\"../../node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"../../node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"../../node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"../../node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"../../node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"../../node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"../../node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"../../node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"../../node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"../../node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"../../node_modules/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"script/DeployTestToken.s.sol\":{\"keccak256\":\"0xac447f2ad5fca5f06bea1e89fe6b672bbdedb0f1230ae6f7ae3197d5e8c7e95c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3baf90c8bf7d5eecbbfe7aaed14b0bad646ae8367e49c19ce91eb5168ef83778\",\"dweb:/ipfs/QmSbJH2w4MMRGPtiU2HL8Mh5A2PmD9rcDAqDTgFpzM58ih\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tick",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_maxPerMint",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freeMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freeMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@gnosis.pm/=../../node_modules/@gnosis.pm/",
        "@openzeppelin/=../../node_modules/@openzeppelin/",
        "@uniswap/=../../node_modules/@uniswap/",
        "@zk-email/=../../node_modules/@zk-email/",
        "accountabstraction/=../../node_modules/accountabstraction/",
        "base64-sol/=../../node_modules/base64-sol/",
        "ds-test/=../../node_modules/ds-test/src/",
        "forge-std/=../../node_modules/forge-std/src/",
        "hardhat-deploy/=../../node_modules/hardhat-deploy/",
        "snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/",
        "solady/=../../node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "script/DeployTestToken.s.sol": "TestERC20"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/Script.sol": {
        "keccak256": "0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2",
        "urls": [
          "bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c",
          "dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273",
        "urls": [
          "bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85",
          "dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "../../node_modules/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "script/DeployTestToken.s.sol": {
        "keccak256": "0xac447f2ad5fca5f06bea1e89fe6b672bbdedb0f1230ae6f7ae3197d5e8c7e95c",
        "urls": [
          "bzz-raw://3baf90c8bf7d5eecbbfe7aaed14b0bad646ae8367e49c19ce91eb5168ef83778",
          "dweb:/ipfs/QmSbJH2w4MMRGPtiU2HL8Mh5A2PmD9rcDAqDTgFpzM58ih"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 769,
        "contract": "script/DeployTestToken.s.sol:TestERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 775,
        "contract": "script/DeployTestToken.s.sol:TestERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 777,
        "contract": "script/DeployTestToken.s.sol:TestERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 779,
        "contract": "script/DeployTestToken.s.sol:TestERC20",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 781,
        "contract": "script/DeployTestToken.s.sol:TestERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 63373,
        "contract": "script/DeployTestToken.s.sol:TestERC20",
        "label": "maxPerMint",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "ast": {
    "absolutePath": "script/DeployTestToken.s.sol",
    "id": 63502,
    "exportedSymbols": {
      "Context": [
        95973
      ],
      "Deploy": [
        63501
      ],
      "ERC20": [
        1340
      ],
      "IERC20": [
        1418
      ],
      "IERC20Metadata": [
        96364
      ],
      "Script": [
        7403
      ],
      "ScriptBase": [
        97945
      ],
      "StdChains": [
        98709
      ],
      "StdCheatsSafe": [
        100769
      ],
      "StdStorage": [
        7435
      ],
      "StdStyle": [
        103507
      ],
      "StdUtils": [
        104355
      ],
      "TestERC20": [
        63424
      ],
      "VmSafe": [
        105590
      ],
      "console": [
        17189
      ],
      "console2": [
        114186
      ],
      "safeconsole": [
        127261
      ],
      "stdJson": [
        102154
      ],
      "stdMath": [
        102296
      ],
      "stdStorageSafe": [
        8483
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1216:125",
    "nodes": [
      {
        "id": 63367,
        "nodeType": "PragmaDirective",
        "src": "39:24:125",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 63368,
        "nodeType": "ImportDirective",
        "src": "65:55:125",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63502,
        "sourceUnit": 1341,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63369,
        "nodeType": "ImportDirective",
        "src": "121:30:125",
        "nodes": [],
        "absolutePath": "../../node_modules/forge-std/src/Script.sol",
        "file": "forge-std/Script.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63502,
        "sourceUnit": 7404,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63424,
        "nodeType": "ContractDefinition",
        "src": "153:440:125",
        "nodes": [
          {
            "id": 63373,
            "nodeType": "VariableDeclaration",
            "src": "187:15:125",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "maxPerMint",
            "nameLocation": "192:10:125",
            "scope": 63424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63372,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "187:4:125",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 63391,
            "nodeType": "FunctionDefinition",
            "src": "209:129:125",
            "nodes": [],
            "body": {
              "id": 63390,
              "nodeType": "Block",
              "src": "297:41:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63386,
                      "name": "maxPerMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63373,
                      "src": "307:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63387,
                      "name": "_maxPerMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63379,
                      "src": "320:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "307:24:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63389,
                  "nodeType": "ExpressionStatement",
                  "src": "307:24:125"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 63382,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63375,
                    "src": "285:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 63383,
                    "name": "tick",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63377,
                    "src": "291:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 63384,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 63381,
                  "name": "ERC20",
                  "nameLocations": [
                    "279:5:125"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1340,
                  "src": "279:5:125"
                },
                "nodeType": "ModifierInvocation",
                "src": "279:17:125"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 63380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63375,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "235:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 63391,
                  "src": "221:18:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63377,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "255:4:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 63391,
                  "src": "241:18:125",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63376,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:6:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63379,
                  "mutability": "mutable",
                  "name": "_maxPerMint",
                  "nameLocation": "266:11:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 63391,
                  "src": "261:16:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63378,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "220:58:125"
            },
            "returnParameters": {
              "id": 63385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:125"
            },
            "scope": 63424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63403,
            "nodeType": "FunctionDefinition",
            "src": "344:86:125",
            "nodes": [],
            "body": {
              "id": 63402,
              "nodeType": "Block",
              "src": "385:45:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "404:3:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 63398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "408:6:125",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "404:10:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63399,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63393,
                        "src": "416:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63396,
                      "name": "freeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        63403,
                        63423
                      ],
                      "referencedDeclaration": 63423,
                      "src": "395:8:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "395:28:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63401,
                  "nodeType": "ExpressionStatement",
                  "src": "395:28:125"
                }
              ]
            },
            "functionSelector": "7c928fe9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "freeMint",
            "nameLocation": "353:8:125",
            "parameters": {
              "id": 63394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63393,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "370:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 63403,
                  "src": "362:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:16:125"
            },
            "returnParameters": {
              "id": 63395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:125"
            },
            "scope": 63424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63423,
            "nodeType": "FunctionDefinition",
            "src": "436:155:125",
            "nodes": [],
            "body": {
              "id": 63422,
              "nodeType": "Block",
              "src": "489:102:125",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63411,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63407,
                          "src": "507:6:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 63412,
                          "name": "maxPerMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63373,
                          "src": "517:10:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "507:20:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742065786365656473206d61785065724d696e74",
                        "id": 63414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "529:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a6b2dbcf73f84a6677f800b901d5cf3918e75b2c2c31357cbd36dd4514d498f",
                          "typeString": "literal_string \"amount exceeds maxPerMint\""
                        },
                        "value": "amount exceeds maxPerMint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a6b2dbcf73f84a6677f800b901d5cf3918e75b2c2c31357cbd36dd4514d498f",
                          "typeString": "literal_string \"amount exceeds maxPerMint\""
                        }
                      ],
                      "id": 63410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "499:7:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:58:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63416,
                  "nodeType": "ExpressionStatement",
                  "src": "499:58:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63418,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63405,
                        "src": "573:2:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63419,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63407,
                        "src": "577:6:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63417,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "567:5:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:17:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63421,
                  "nodeType": "ExpressionStatement",
                  "src": "567:17:125"
                }
              ]
            },
            "functionSelector": "9883566e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "freeMint",
            "nameLocation": "445:8:125",
            "parameters": {
              "id": 63408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63405,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "462:2:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 63423,
                  "src": "454:10:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:125",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63407,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "474:6:125",
                  "nodeType": "VariableDeclaration",
                  "scope": 63423,
                  "src": "466:14:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:28:125"
            },
            "returnParameters": {
              "id": 63409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:125"
            },
            "scope": 63424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63370,
              "name": "ERC20",
              "nameLocations": [
                "175:5:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1340,
              "src": "175:5:125"
            },
            "id": 63371,
            "nodeType": "InheritanceSpecifier",
            "src": "175:5:125"
          }
        ],
        "canonicalName": "TestERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          63424,
          1340,
          96364,
          1418,
          95973
        ],
        "name": "TestERC20",
        "nameLocation": "162:9:125",
        "scope": 63502,
        "usedErrors": [],
        "usedEvents": [
          1352,
          1361
        ]
      },
      {
        "id": 63501,
        "nodeType": "ContractDefinition",
        "src": "595:659:125",
        "nodes": [
          {
            "id": 63500,
            "nodeType": "FunctionDefinition",
            "src": "627:625:125",
            "nodes": [],
            "body": {
              "id": 63499,
              "nodeType": "Block",
              "src": "651:601:125",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63430,
                      "mutability": "mutable",
                      "name": "deployerPrivateKey",
                      "nameLocation": "669:18:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 63499,
                      "src": "661:26:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "661:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63435,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "505249564154455f4b4559",
                        "id": 63433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "701:13:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ef6555c4d06f7a53d2dd092327f3256a8d6f18aff592d5349c12226686be6c5",
                          "typeString": "literal_string \"PRIVATE_KEY\""
                        },
                        "value": "PRIVATE_KEY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ef6555c4d06f7a53d2dd092327f3256a8d6f18aff592d5349c12226686be6c5",
                          "typeString": "literal_string \"PRIVATE_KEY\""
                        }
                      ],
                      "expression": {
                        "id": 63431,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97929,
                        "src": "690:2:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$106061",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 63432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "693:7:125",
                      "memberName": "envUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104760,
                      "src": "690:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) view external returns (uint256)"
                      }
                    },
                    "id": 63434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:25:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "661:54:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63436,
                      "name": "deployerPrivateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63430,
                      "src": "729:18:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "751:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "729:23:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63447,
                  "nodeType": "IfStatement",
                  "src": "725:116:125",
                  "trueBody": {
                    "id": 63446,
                    "nodeType": "Block",
                    "src": "754:87:125",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "505249564154455f4b455920656e7620766172206e6f7420736574",
                              "id": 63442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "780:29:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9bd640d772f97b21a5f82deadced87cd05abd69d6b57901488d9ecc29216f151",
                                "typeString": "literal_string \"PRIVATE_KEY env var not set\""
                              },
                              "value": "PRIVATE_KEY env var not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9bd640d772f97b21a5f82deadced87cd05abd69d6b57901488d9ecc29216f151",
                                "typeString": "literal_string \"PRIVATE_KEY env var not set\""
                              }
                            ],
                            "expression": {
                              "id": 63439,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17189,
                              "src": "768:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$17189_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 63441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "776:3:125",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9720,
                            "src": "768:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) view"
                            }
                          },
                          "id": 63443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "768:42:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63444,
                        "nodeType": "ExpressionStatement",
                        "src": "768:42:125"
                      },
                      {
                        "functionReturnParameters": 63428,
                        "id": 63445,
                        "nodeType": "Return",
                        "src": "824:7:125"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    63449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63449,
                      "mutability": "mutable",
                      "name": "maxAmount",
                      "nameLocation": "858:9:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 63499,
                      "src": "850:17:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63454,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4d41585f414d4f554e54",
                        "id": 63452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:12:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb33be58226c01012b575e7f37f6edb53b264fd70fddb5106e9e520890c476d7",
                          "typeString": "literal_string \"MAX_AMOUNT\""
                        },
                        "value": "MAX_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bb33be58226c01012b575e7f37f6edb53b264fd70fddb5106e9e520890c476d7",
                          "typeString": "literal_string \"MAX_AMOUNT\""
                        }
                      ],
                      "expression": {
                        "id": 63450,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97929,
                        "src": "870:2:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$106061",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 63451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "873:7:125",
                      "memberName": "envUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104760,
                      "src": "870:10:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) view external returns (uint256)"
                      }
                    },
                    "id": 63453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:24:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "850:44:125"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63455,
                      "name": "maxAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63449,
                      "src": "908:9:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "921:1:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "908:14:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63466,
                  "nodeType": "IfStatement",
                  "src": "904:106:125",
                  "trueBody": {
                    "id": 63465,
                    "nodeType": "Block",
                    "src": "924:86:125",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4d41585f414d4f554e5420656e7620766172206e6f7420736574",
                              "id": 63461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "950:28:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0b2cc8a74e9a41acdf0d8869170ba447974ce18355a85c15cd8dd8d1318a7b3",
                                "typeString": "literal_string \"MAX_AMOUNT env var not set\""
                              },
                              "value": "MAX_AMOUNT env var not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f0b2cc8a74e9a41acdf0d8869170ba447974ce18355a85c15cd8dd8d1318a7b3",
                                "typeString": "literal_string \"MAX_AMOUNT env var not set\""
                              }
                            ],
                            "expression": {
                              "id": 63458,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17189,
                              "src": "938:7:125",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$17189_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 63460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "946:3:125",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9720,
                            "src": "938:11:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) view"
                            }
                          },
                          "id": 63462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "938:41:125",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63463,
                        "nodeType": "ExpressionStatement",
                        "src": "938:41:125"
                      },
                      {
                        "functionReturnParameters": 63428,
                        "id": 63464,
                        "nodeType": "Return",
                        "src": "993:7:125"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63470,
                        "name": "deployerPrivateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63430,
                        "src": "1038:18:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63467,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97929,
                        "src": "1020:2:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$106061",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 63469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1023:14:125",
                      "memberName": "startBroadcast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105107,
                      "src": "1020:17:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 63471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:37:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63472,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:37:125"
                },
                {
                  "assignments": [
                    63475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63475,
                      "mutability": "mutable",
                      "name": "testToken",
                      "nameLocation": "1077:9:125",
                      "nodeType": "VariableDeclaration",
                      "scope": 63499,
                      "src": "1067:19:125",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$63424",
                        "typeString": "contract TestERC20"
                      },
                      "typeName": {
                        "id": 63474,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63473,
                          "name": "TestERC20",
                          "nameLocations": [
                            "1067:9:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63424,
                          "src": "1067:9:125"
                        },
                        "referencedDeclaration": 63424,
                        "src": "1067:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$63424",
                          "typeString": "contract TestERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63483,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "456d61696c57616c6c6574563154657374",
                        "id": 63479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1103:19:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488d604df48280863404aaae5097976d47ba534f5686fbc6c23620bc1a448515",
                          "typeString": "literal_string \"EmailWalletV1Test\""
                        },
                        "value": "EmailWalletV1Test"
                      },
                      {
                        "hexValue": "4557563154455354",
                        "id": 63480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:10:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25ea08ee399f151b319bb4e8e70efa1cb58646a355ecde77e7bbe6376dbbee64",
                          "typeString": "literal_string \"EWV1TEST\""
                        },
                        "value": "EWV1TEST"
                      },
                      {
                        "id": 63481,
                        "name": "maxAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63449,
                        "src": "1136:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_488d604df48280863404aaae5097976d47ba534f5686fbc6c23620bc1a448515",
                          "typeString": "literal_string \"EmailWalletV1Test\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25ea08ee399f151b319bb4e8e70efa1cb58646a355ecde77e7bbe6376dbbee64",
                          "typeString": "literal_string \"EWV1TEST\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1089:13:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_TestERC20_$63424_$",
                        "typeString": "function (string memory,string memory,uint256) returns (contract TestERC20)"
                      },
                      "typeName": {
                        "id": 63477,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63476,
                          "name": "TestERC20",
                          "nameLocations": [
                            "1093:9:125"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63424,
                          "src": "1093:9:125"
                        },
                        "referencedDeclaration": 63424,
                        "src": "1093:9:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$63424",
                          "typeString": "contract TestERC20"
                        }
                      }
                    },
                    "id": 63482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:57:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20_$63424",
                      "typeString": "contract TestERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1067:79:125"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63484,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97929,
                        "src": "1156:2:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$106061",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 63486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1159:13:125",
                      "memberName": "stopBroadcast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105110,
                      "src": "1156:16:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 63487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:18:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63488,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:18:125"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546573744552433230206465706c6f7965642061743a202573",
                        "id": 63492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1197:27:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26fbdc531f63b11c5d826c44ecc8a1445f25336a88efaebe20757ab55747527c",
                          "typeString": "literal_string \"TestERC20 deployed at: %s\""
                        },
                        "value": "TestERC20 deployed at: %s"
                      },
                      {
                        "arguments": [
                          {
                            "id": 63495,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63475,
                            "src": "1234:9:125",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$63424",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$63424",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 63494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1226:7:125",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1226:7:125",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1226:18:125",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_26fbdc531f63b11c5d826c44ecc8a1445f25336a88efaebe20757ab55747527c",
                          "typeString": "literal_string \"TestERC20 deployed at: %s\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 63489,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "1185:7:125",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$17189_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 63491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1193:3:125",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9884,
                      "src": "1185:11:125",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 63497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:60:125",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63498,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:60:125"
                }
              ]
            },
            "functionSelector": "c0406226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nameLocation": "636:3:125",
            "parameters": {
              "id": 63427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "639:2:125"
            },
            "returnParameters": {
              "id": 63428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:125"
            },
            "scope": 63501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63425,
              "name": "Script",
              "nameLocations": [
                "614:6:125"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7403,
              "src": "614:6:125"
            },
            "id": 63426,
            "nodeType": "InheritanceSpecifier",
            "src": "614:6:125"
          }
        ],
        "canonicalName": "Deploy",
        "contractDependencies": [
          63424
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          63501,
          7403,
          104355,
          100769,
          98709,
          97945,
          97933
        ],
        "name": "Deploy",
        "nameLocation": "604:6:125",
        "scope": 63502,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 125
}