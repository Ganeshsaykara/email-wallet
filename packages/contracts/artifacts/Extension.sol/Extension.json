{"abi":[{"type":"function","name":"claimUnclaimedState","inputs":[{"name":"unclaimedState","type":"tuple","internalType":"struct UnclaimedState","components":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"emailAddrCommit","type":"bytes32","internalType":"bytes32"},{"name":"extensionAddr","type":"address","internalType":"address"},{"name":"sender","type":"address","internalType":"address"},{"name":"state","type":"bytes","internalType":"bytes"},{"name":"expiryTime","type":"uint256","internalType":"uint256"}]},{"name":"wallet","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"execute","inputs":[{"name":"templateIndex","type":"uint8","internalType":"uint8"},{"name":"subjectParams","type":"bytes[]","internalType":"bytes[]"},{"name":"wallet","type":"address","internalType":"address"},{"name":"hasEmailRecipient","type":"bool","internalType":"bool"},{"name":"recipientETHAddr","type":"address","internalType":"address"},{"name":"emailNullifier","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerUnclaimedState","inputs":[{"name":"unclaimedState","type":"tuple","internalType":"struct UnclaimedState","components":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"emailAddrCommit","type":"bytes32","internalType":"bytes32"},{"name":"extensionAddr","type":"address","internalType":"address"},{"name":"sender","type":"address","internalType":"address"},{"name":"state","type":"bytes","internalType":"bytes"},{"name":"expiryTime","type":"uint256","internalType":"uint256"}]},{"name":"isInternal","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"voidUnclaimedState","inputs":[{"name":"unclaimedState","type":"tuple","internalType":"struct UnclaimedState","components":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"emailAddrCommit","type":"bytes32","internalType":"bytes32"},{"name":"extensionAddr","type":"address","internalType":"address"},{"name":"sender","type":"address","internalType":"address"},{"name":"state","type":"bytes","internalType":"bytes"},{"name":"expiryTime","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimUnclaimedState((uint256,bytes32,address,address,bytes,uint256),address)":"8eb0930c","execute(uint8,bytes[],address,bool,address,bytes32)":"e93977e8","registerUnclaimedState((uint256,bytes32,address,address,bytes,uint256),bool)":"3ed4f16a","voidUnclaimedState((uint256,bytes32,address,address,bytes,uint256))":"b91ad651"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"emailAddrCommit\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"extensionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"internalType\":\"struct UnclaimedState\",\"name\":\"unclaimedState\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"claimUnclaimedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"templateIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes[]\",\"name\":\"subjectParams\",\"type\":\"bytes[]\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasEmailRecipient\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipientETHAddr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"emailNullifier\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"emailAddrCommit\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"extensionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"internalType\":\"struct UnclaimedState\",\"name\":\"unclaimedState\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isInternal\",\"type\":\"bool\"}],\"name\":\"registerUnclaimedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"emailAddrCommit\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"extensionAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"state\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"internalType\":\"struct UnclaimedState\",\"name\":\"unclaimedState\",\"type\":\"tuple\"}],\"name\":\"voidUnclaimedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimUnclaimedState((uint256,bytes32,address,address,bytes,uint256),address)\":{\"params\":{\"unclaimedState\":\"Unclaimed state that is being claimed\",\"wallet\":\"Address of users wallet\"}},\"execute(uint8,bytes[],address,bool,address,bytes32)\":{\"details\":\"Implementations should not send tokens to `wallet` directly and use `EmailWalletCore.depositTokenToAccount()` insteadDecode {tokenAmount} in template as `abi.decode(uint256,string)` (`tokenName` and `tokenAmount`)\",\"params\":{\"emailNullifier\":\"Nullifier of the email\",\"hasEmailRecipient\":\"Whether the email subject has a recipient (email address)\",\"recipientETHAddr\":\"The ETH address of the recipient in email (if any, and hasEmailRecipient = false)\",\"subjectParams\":\"Array of params decoded from email subject based on the template, in the same order matchers\",\"templateIndex\":\"Index of the subjectTemplate to which the subject was matched\",\"wallet\":\"Address of users wallet\"}},\"registerUnclaimedState((uint256,bytes32,address,address,bytes,uint256),bool)\":{\"params\":{\"isInternal\":\"A flag whether the unclaimed state is registered from `registerUnclaimedStateAsExtension` and the caller and callee extensions are the same.\",\"unclaimedState\":\"Unclaimed state that is registered\"}},\"voidUnclaimedState((uint256,bytes32,address,address,bytes,uint256))\":{\"params\":{\"unclaimedState\":\"Unclaimed state that is expired\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimUnclaimedState((uint256,bytes32,address,address,bytes,uint256),address)\":{\"notice\":\"Claim an unclaimed state to recipient user\"},\"execute(uint8,bytes[],address,bool,address,bytes32)\":{\"notice\":\"Execute the extension logic\"},\"registerUnclaimedState((uint256,bytes32,address,address,bytes,uint256),bool)\":{\"notice\":\"Register unclaimed state for a recipient emailCommitment\"},\"voidUnclaimedState((uint256,bytes32,address,address,bytes,uint256))\":{\"notice\":\"Revert an expired inclaimed state\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/Extension.sol\":\"Extension\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@gnosis.pm/=../../node_modules/@gnosis.pm/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@uniswap/=../../node_modules/@uniswap/\",\":@zk-email/=../../node_modules/@zk-email/\",\":accountabstraction/=../../node_modules/accountabstraction/\",\":base64-sol/=../../node_modules/base64-sol/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/\",\":solady/=../../node_modules/solady/src/\"]},\"sources\":{\"src/interfaces/Extension.sol\":{\"keccak256\":\"0xcc25fb43b3df67269a28d3b3101e5c9719a1198d18d43f3fdcdf25cb78ff945b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc2db4488dae45d62419107daa9a323e762e1f81113d1af0165b9b359934059\",\"dweb:/ipfs/QmSbGkFPDyqBXgBzuPqNRduuiHYGq1Ud5VWk17TpWvuAst\"]},\"src/interfaces/Types.sol\":{\"keccak256\":\"0xdda4bd8f54d71718909102f17f15cbee97822be3cb9cbb4a2cc12b8ae91a6b21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://920067200c2543449bca277cf0c629c1f17aa958d5851afdb3919efb34583a1c\",\"dweb:/ipfs/QmZL75x6SEgCXV6LFMqpxCEy63un8ghr7FJrLVHzi3KyxK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct UnclaimedState","name":"unclaimedState","type":"tuple","components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bytes32","name":"emailAddrCommit","type":"bytes32"},{"internalType":"address","name":"extensionAddr","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"state","type":"bytes"},{"internalType":"uint256","name":"expiryTime","type":"uint256"}]},{"internalType":"address","name":"wallet","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimUnclaimedState"},{"inputs":[{"internalType":"uint8","name":"templateIndex","type":"uint8"},{"internalType":"bytes[]","name":"subjectParams","type":"bytes[]"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bool","name":"hasEmailRecipient","type":"bool"},{"internalType":"address","name":"recipientETHAddr","type":"address"},{"internalType":"bytes32","name":"emailNullifier","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[{"internalType":"struct UnclaimedState","name":"unclaimedState","type":"tuple","components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bytes32","name":"emailAddrCommit","type":"bytes32"},{"internalType":"address","name":"extensionAddr","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"state","type":"bytes"},{"internalType":"uint256","name":"expiryTime","type":"uint256"}]},{"internalType":"bool","name":"isInternal","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"registerUnclaimedState"},{"inputs":[{"internalType":"struct UnclaimedState","name":"unclaimedState","type":"tuple","components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bytes32","name":"emailAddrCommit","type":"bytes32"},{"internalType":"address","name":"extensionAddr","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"state","type":"bytes"},{"internalType":"uint256","name":"expiryTime","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"voidUnclaimedState"}],"devdoc":{"kind":"dev","methods":{"claimUnclaimedState((uint256,bytes32,address,address,bytes,uint256),address)":{"params":{"unclaimedState":"Unclaimed state that is being claimed","wallet":"Address of users wallet"}},"execute(uint8,bytes[],address,bool,address,bytes32)":{"details":"Implementations should not send tokens to `wallet` directly and use `EmailWalletCore.depositTokenToAccount()` insteadDecode {tokenAmount} in template as `abi.decode(uint256,string)` (`tokenName` and `tokenAmount`)","params":{"emailNullifier":"Nullifier of the email","hasEmailRecipient":"Whether the email subject has a recipient (email address)","recipientETHAddr":"The ETH address of the recipient in email (if any, and hasEmailRecipient = false)","subjectParams":"Array of params decoded from email subject based on the template, in the same order matchers","templateIndex":"Index of the subjectTemplate to which the subject was matched","wallet":"Address of users wallet"}},"registerUnclaimedState((uint256,bytes32,address,address,bytes,uint256),bool)":{"params":{"isInternal":"A flag whether the unclaimed state is registered from `registerUnclaimedStateAsExtension` and the caller and callee extensions are the same.","unclaimedState":"Unclaimed state that is registered"}},"voidUnclaimedState((uint256,bytes32,address,address,bytes,uint256))":{"params":{"unclaimedState":"Unclaimed state that is expired"}}},"version":1},"userdoc":{"kind":"user","methods":{"claimUnclaimedState((uint256,bytes32,address,address,bytes,uint256),address)":{"notice":"Claim an unclaimed state to recipient user"},"execute(uint8,bytes[],address,bool,address,bytes32)":{"notice":"Execute the extension logic"},"registerUnclaimedState((uint256,bytes32,address,address,bytes,uint256),bool)":{"notice":"Register unclaimed state for a recipient emailCommitment"},"voidUnclaimedState((uint256,bytes32,address,address,bytes,uint256))":{"notice":"Revert an expired inclaimed state"}},"version":1}},"settings":{"remappings":["@gnosis.pm/=../../node_modules/@gnosis.pm/","@openzeppelin/=../../node_modules/@openzeppelin/","@uniswap/=../../node_modules/@uniswap/","@zk-email/=../../node_modules/@zk-email/","accountabstraction/=../../node_modules/accountabstraction/","base64-sol/=../../node_modules/base64-sol/","ds-test/=../../node_modules/ds-test/src/","forge-std/=../../node_modules/forge-std/src/","hardhat-deploy/=../../node_modules/hardhat-deploy/","snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/","solady/=../../node_modules/solady/src/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/Extension.sol":"Extension"},"libraries":{}},"sources":{"src/interfaces/Extension.sol":{"keccak256":"0xcc25fb43b3df67269a28d3b3101e5c9719a1198d18d43f3fdcdf25cb78ff945b","urls":["bzz-raw://7dc2db4488dae45d62419107daa9a323e762e1f81113d1af0165b9b359934059","dweb:/ipfs/QmSbGkFPDyqBXgBzuPqNRduuiHYGq1Ud5VWk17TpWvuAst"],"license":"MIT"},"src/interfaces/Types.sol":{"keccak256":"0xdda4bd8f54d71718909102f17f15cbee97822be3cb9cbb4a2cc12b8ae91a6b21","urls":["bzz-raw://920067200c2543449bca277cf0c629c1f17aa958d5851afdb3919efb34583a1c","dweb:/ipfs/QmZL75x6SEgCXV6LFMqpxCEy63un8ghr7FJrLVHzi3KyxK"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/interfaces/Extension.sol","id":63821,"exportedSymbols":{"AccountKeyInfo":[64000],"EmailOp":[63956],"EmailProof":[64011],"ExecutionContext":[64033],"Extension":[63820],"ExtensionParams":[63967],"RelayerConfig":[63913],"TokenAllowance":[64016],"UnclaimedFund":[63980],"UnclaimedState":[63993],"WalletParams":[63961]},"nodeType":"SourceUnit","src":"0:2208:129","nodes":[{"id":63755,"nodeType":"ImportDirective","src":"0:21:129","nodes":[],"absolutePath":"src/interfaces/Types.sol","file":"./Types.sol","nameLocation":"-1:-1:-1","scope":63821,"sourceUnit":64034,"symbolAliases":[],"unitAlias":""},{"id":63756,"nodeType":"PragmaDirective","src":"55:23:129","nodes":[],"literals":["solidity","^","0.8",".9"]},{"id":63820,"nodeType":"ContractDefinition","src":"80:2127:129","nodes":[{"id":63773,"nodeType":"FunctionDefinition","src":"908:229:129","nodes":[],"documentation":{"id":63757,"nodeType":"StructuredDocumentation","src":"114:789:129","text":"Execute the extension logic\n @param templateIndex Index of the subjectTemplate to which the subject was matched\n @param subjectParams Array of params decoded from email subject based on the template, in the same order matchers\n @param wallet Address of users wallet\n @param hasEmailRecipient Whether the email subject has a recipient (email address)\n @param recipientETHAddr The ETH address of the recipient in email (if any, and hasEmailRecipient = false)\n @param emailNullifier Nullifier of the email\n @dev Implementations should not send tokens to `wallet` directly and use `EmailWalletCore.depositTokenToAccount()` instead\n @dev Decode {tokenAmount} in template as `abi.decode(uint256,string)` (`tokenName` and `tokenAmount`)"},"functionSelector":"e93977e8","implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"917:7:129","parameters":{"id":63771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63759,"mutability":"mutable","name":"templateIndex","nameLocation":"940:13:129","nodeType":"VariableDeclaration","scope":63773,"src":"934:19:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":63758,"name":"uint8","nodeType":"ElementaryTypeName","src":"934:5:129","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":63762,"mutability":"mutable","name":"subjectParams","nameLocation":"978:13:129","nodeType":"VariableDeclaration","scope":63773,"src":"963:28:129","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":63760,"name":"bytes","nodeType":"ElementaryTypeName","src":"963:5:129","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":63761,"nodeType":"ArrayTypeName","src":"963:7:129","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":63764,"mutability":"mutable","name":"wallet","nameLocation":"1009:6:129","nodeType":"VariableDeclaration","scope":63773,"src":"1001:14:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63763,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63766,"mutability":"mutable","name":"hasEmailRecipient","nameLocation":"1030:17:129","nodeType":"VariableDeclaration","scope":63773,"src":"1025:22:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":63765,"name":"bool","nodeType":"ElementaryTypeName","src":"1025:4:129","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":63768,"mutability":"mutable","name":"recipientETHAddr","nameLocation":"1065:16:129","nodeType":"VariableDeclaration","scope":63773,"src":"1057:24:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63767,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63770,"mutability":"mutable","name":"emailNullifier","nameLocation":"1099:14:129","nodeType":"VariableDeclaration","scope":63773,"src":"1091:22:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":63769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1091:7:129","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"924:195:129"},"returnParameters":{"id":63772,"nodeType":"ParameterList","parameters":[],"src":"1136:0:129"},"scope":63820,"stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"id":63787,"nodeType":"FunctionDefinition","src":"1440:153:129","nodes":[],"body":{"id":63786,"nodeType":"Block","src":"1542:51:129","nodes":[],"statements":[{"expression":{"id":63782,"name":"unclaimedState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63777,"src":"1552:14:129","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_memory_ptr","typeString":"struct UnclaimedState memory"}},"id":63783,"nodeType":"ExpressionStatement","src":"1552:14:129"},{"expression":{"id":63784,"name":"isInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63779,"src":"1576:10:129","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":63785,"nodeType":"ExpressionStatement","src":"1576:10:129"}]},"documentation":{"id":63774,"nodeType":"StructuredDocumentation","src":"1143:292:129","text":"Register unclaimed state for a recipient emailCommitment\n @param unclaimedState Unclaimed state that is registered\n @param isInternal A flag whether the unclaimed state is registered from `registerUnclaimedStateAsExtension` and the caller and callee extensions are the same."},"functionSelector":"3ed4f16a","implemented":true,"kind":"function","modifiers":[],"name":"registerUnclaimedState","nameLocation":"1449:22:129","parameters":{"id":63780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63777,"mutability":"mutable","name":"unclaimedState","nameLocation":"1494:14:129","nodeType":"VariableDeclaration","scope":63787,"src":"1472:36:129","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_memory_ptr","typeString":"struct UnclaimedState"},"typeName":{"id":63776,"nodeType":"UserDefinedTypeName","pathNode":{"id":63775,"name":"UnclaimedState","nameLocations":["1472:14:129"],"nodeType":"IdentifierPath","referencedDeclaration":63993,"src":"1472:14:129"},"referencedDeclaration":63993,"src":"1472:14:129","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_storage_ptr","typeString":"struct UnclaimedState"}},"visibility":"internal"},{"constant":false,"id":63779,"mutability":"mutable","name":"isInternal","nameLocation":"1515:10:129","nodeType":"VariableDeclaration","scope":63787,"src":"1510:15:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":63778,"name":"bool","nodeType":"ElementaryTypeName","src":"1510:4:129","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:55:129"},"returnParameters":{"id":63781,"nodeType":"ParameterList","parameters":[],"src":"1542:0:129"},"scope":63820,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":63805,"nodeType":"FunctionDefinition","src":"1764:182:129","nodes":[],"body":{"id":63804,"nodeType":"Block","src":"1864:82:129","nodes":[],"statements":[{"expression":{"id":63796,"name":"unclaimedState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63791,"src":"1874:14:129","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_memory_ptr","typeString":"struct UnclaimedState memory"}},"id":63797,"nodeType":"ExpressionStatement","src":"1874:14:129"},{"expression":{"id":63798,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63793,"src":"1898:6:129","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":63799,"nodeType":"ExpressionStatement","src":"1898:6:129"},{"expression":{"arguments":[{"hexValue":"4e6f7420696d706c656d656e746564","id":63801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1921:17:129","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b","typeString":"literal_string \"Not implemented\""},"value":"Not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b","typeString":"literal_string \"Not implemented\""}],"id":63800,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1914:6:129","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":63802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:25:129","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63803,"nodeType":"ExpressionStatement","src":"1914:25:129"}]},"documentation":{"id":63788,"nodeType":"StructuredDocumentation","src":"1599:160:129","text":"Claim an unclaimed state to recipient user\n @param unclaimedState Unclaimed state that is being claimed\n @param wallet Address of users wallet"},"functionSelector":"8eb0930c","implemented":true,"kind":"function","modifiers":[],"name":"claimUnclaimedState","nameLocation":"1773:19:129","parameters":{"id":63794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63791,"mutability":"mutable","name":"unclaimedState","nameLocation":"1815:14:129","nodeType":"VariableDeclaration","scope":63805,"src":"1793:36:129","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_memory_ptr","typeString":"struct UnclaimedState"},"typeName":{"id":63790,"nodeType":"UserDefinedTypeName","pathNode":{"id":63789,"name":"UnclaimedState","nameLocations":["1793:14:129"],"nodeType":"IdentifierPath","referencedDeclaration":63993,"src":"1793:14:129"},"referencedDeclaration":63993,"src":"1793:14:129","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_storage_ptr","typeString":"struct UnclaimedState"}},"visibility":"internal"},{"constant":false,"id":63793,"mutability":"mutable","name":"wallet","nameLocation":"1839:6:129","nodeType":"VariableDeclaration","scope":63805,"src":"1831:14:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63792,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1792:54:129"},"returnParameters":{"id":63795,"nodeType":"ParameterList","parameters":[],"src":"1864:0:129"},"scope":63820,"stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"id":63819,"nodeType":"FunctionDefinition","src":"2056:149:129","nodes":[],"body":{"id":63818,"nodeType":"Block","src":"2139:66:129","nodes":[],"statements":[{"expression":{"id":63812,"name":"unclaimedState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63809,"src":"2149:14:129","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_memory_ptr","typeString":"struct UnclaimedState memory"}},"id":63813,"nodeType":"ExpressionStatement","src":"2149:14:129"},{"expression":{"arguments":[{"hexValue":"4e6f7420696d706c656d656e746564","id":63815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2180:17:129","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b","typeString":"literal_string \"Not implemented\""},"value":"Not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f5474d7a5849b3f79e8aee7ea2c60bcd36a60a08b4fa41f97e2fccf1c4df98b","typeString":"literal_string \"Not implemented\""}],"id":63814,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2173:6:129","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":63816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:25:129","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63817,"nodeType":"ExpressionStatement","src":"2173:25:129"}]},"documentation":{"id":63806,"nodeType":"StructuredDocumentation","src":"1952:99:129","text":"Revert an expired inclaimed state\n @param unclaimedState Unclaimed state that is expired"},"functionSelector":"b91ad651","implemented":true,"kind":"function","modifiers":[],"name":"voidUnclaimedState","nameLocation":"2065:18:129","parameters":{"id":63810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63809,"mutability":"mutable","name":"unclaimedState","nameLocation":"2106:14:129","nodeType":"VariableDeclaration","scope":63819,"src":"2084:36:129","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_memory_ptr","typeString":"struct UnclaimedState"},"typeName":{"id":63808,"nodeType":"UserDefinedTypeName","pathNode":{"id":63807,"name":"UnclaimedState","nameLocations":["2084:14:129"],"nodeType":"IdentifierPath","referencedDeclaration":63993,"src":"2084:14:129"},"referencedDeclaration":63993,"src":"2084:14:129","typeDescriptions":{"typeIdentifier":"t_struct$_UnclaimedState_$63993_storage_ptr","typeString":"struct UnclaimedState"}},"visibility":"internal"}],"src":"2083:38:129"},"returnParameters":{"id":63811,"nodeType":"ParameterList","parameters":[],"src":"2139:0:129"},"scope":63820,"stateMutability":"nonpayable","virtual":true,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"Extension","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"linearizedBaseContracts":[63820],"name":"Extension","nameLocation":"98:9:129","scope":63821,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":129}