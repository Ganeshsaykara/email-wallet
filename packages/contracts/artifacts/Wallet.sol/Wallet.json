{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "dkimRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guardingWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "templateIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes[]",
          "name": "subjectParams",
          "type": "bytes[]"
        },
        {
          "internalType": "address",
          "name": "guardianAddr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "emailNullifier",
          "type": "bytes32"
        }
      ],
      "name": "recover",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guardianAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        }
      ],
      "name": "setGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subjectTemplates",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDKIMRegistry",
          "type": "address"
        }
      ],
      "name": "updateDKIMRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052306080523480156200001557600080fd5b506040516200289838038062002898833981016040819052620000389162000365565b6001600160a01b03811660a0526040805160028082526060820190925290816020015b60608152602001906001900390816200005b575050805162000086916065916020909101906200015d565b5060408051808201909152600060208201818152825260658054909190620000b257620000b2620003ad565b90600052602060002001906001620000cc929190620001c1565b506040518060400160405280604051806040016040528060098152602001687b75696e743235367d60b81b8152508152602001604051806040016040528060098152602001687b75696e743235367d60b81b81525081525060656001815481106200013b576200013b620003ad565b90600052602060002001906002620001559291906200021a565b50506200051e565b828054828255906000526020600020908101928215620001af579160200282015b82811115620001af57825180516200019e91849160209091019062000265565b50916020019190600101906200017e565b50620001bd929150620002b0565b5090565b8280548282559060005260206000209081019282156200020c579160200282015b828111156200020c5782518290620001fb908262000452565b5091602001919060010190620001e2565b50620001bd929150620002d1565b8280548282559060005260206000209081019282156200020c579160200282015b828111156200020c578251829062000254908262000452565b50916020019190600101906200023b565b8280548282559060005260206000209081019282156200020c579160200282015b828111156200020c57825182906200029f908262000452565b509160200191906001019062000286565b80821115620001bd576000620002c78282620002f2565b50600101620002b0565b80821115620001bd576000620002e8828262000315565b50600101620002d1565b5080546000825590600052602060002090810190620003129190620002d1565b50565b5080546200032390620003c3565b6000825580601f1062000334575050565b601f0160209004906000526020600020908101906200031291905b80821115620001bd57600081556001016200034f565b6000602082840312156200037857600080fd5b81516001600160a01b03811681146200039057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620003d857607f821691505b602082108103620003f957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044d57600081815260208120601f850160051c81016020861015620004285750805b601f850160051c820191505b81811015620004495782815560010162000434565b5050505b505050565b81516001600160401b038111156200046e576200046e62000397565b62000486816200047f8454620003c3565b84620003ff565b602080601f831160018114620004be5760008415620004a55750858301515b600019600386901b1c1916600185901b17855562000449565b600085815260208120601f198616915b82811015620004ef57888601518255948401946001909101908401620004ce565b50858210156200050e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05161232a6200056e60003960008181610164015281816101ac01526106050152600081816107e30152818161089301528181610aad01528181610b5d0152610ca2015261232a6000f3fe6080604052600436106101475760003560e01c8063715018a6116100c0578063adea0a5311610074578063bc197c8111610059578063bc197c81146104e5578063f23a6e611461052d578063f2fde38b1461057357610194565b8063adea0a53146104a5578063b61d27f6146104c557610194565b80638129fc1c116100a55780638129fc1c146104455780638da5cb5b1461045a578063a500125c1461048557610194565b8063715018a6146103ed5780637fdddfc61461040257610194565b80633659cfe6116101175780634f1ef286116100fc5780634f1ef2861461036557806352d1902d146103785780636423f1e21461039b57610194565b80633659cfe6146103185780634bd077601461033857610194565b806223de29146101da57806301ffc9a7146101ff578063150b7a0214610234578063227773ee146102aa57610194565b36610194573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101925761019234610593565b005b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101925761019234610593565b3480156101e657600080fd5b506101926101f5366004611bf3565b5050505050505050565b34801561020b57600080fd5b5061021f61021a366004611c9e565b6106e7565b60405190151581526020015b60405180910390f35b34801561024057600080fd5b5061027961024f366004611ce0565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161022b565b3480156102b657600080fd5b506101926102c5366004611d4f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260676020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b34801561032457600080fd5b50610192610333366004611d82565b6107cc565b34801561034457600080fd5b50610358610353366004611d9d565b6109d1565b60405161022b9190611de3565b610192610373366004611f40565b610a96565b34801561038457600080fd5b5061038d610c88565b60405190815260200161022b565b3480156103a757600080fd5b506066546103c89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161022b565b3480156103f957600080fd5b50610192610d74565b34801561040e57600080fd5b506103c861041d366004611d82565b60676020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561045157600080fd5b50610192610d88565b34801561046657600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166103c8565b34801561049157600080fd5b506101926104a0366004611d82565b610f19565b3480156104b157600080fd5b506101926104c0366004611f8e565b610feb565b3480156104d157600080fd5b506101926104e0366004612084565b6111dc565b3480156104f157600080fd5b50610279610500366004612123565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561053957600080fd5b506102796105483660046121bd565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b34801561057f57600080fd5b5061019261058e366004611d82565b6112ee565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd0e30db000000000000000000000000000000000000000000000000000000000179052905160009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691849161063191612235565b60006040518083038185875af1925050503d806000811461066e576040519150601f19603f3d011682016040523d82523d6000602084013e610673565b606091505b50509050806106e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f636f6e7665727420746f2077657468206661696c65640000000000000000000060448201526064015b60405180910390fd5b5050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061077a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806107c657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016106da565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109067f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146109a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016106da565b6109b2816113a2565b604080516000808252602082019092526109ce9183919061142d565b50565b606582815481106109e157600080fd5b9060005260206000200181815481106109f957600080fd5b90600052602060002001600091509150508054610a1590612251565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4190612251565b8015610a8e5780601f10610a6357610100808354040283529160200191610a8e565b820191906000526020600020905b815481529060010190602001808311610a7157829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610b5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016106da565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610bd07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610c73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016106da565b610c7c826113a2565b6106e38282600161142d565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106da565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610d7c611631565b610d8660006116b2565b565b600054610100900460ff1615808015610da85750600054600160ff909116105b80610dc25750303b158015610dc2575060005460ff166001145b610e4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106da565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610eac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610eb4611729565b80156109ce57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60335473ffffffffffffffffffffffffffffffffffffffff16331480610f3e57503330145b610fa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c66000000000000000000000000000060448201526064016106da565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60018460ff161115611059576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c69642074656d706c61746520696e6465780000000000000000000060448201526064016106da565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260676020526040902054166110e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f696e76616c696420677561726469616e0000000000000000000000000000000060448201526064016106da565b8360ff166000036111605782511561115b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c6964207375626a65637420706172616d730000000000000000000060448201526064016106da565b6111d6565b8360ff166001036111d65782516002146111d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c6964207375626a65637420706172616d730000000000000000000060448201526064016106da565b50505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633148061120157503330145b611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c66000000000000000000000000000060448201526064016106da565b6000808573ffffffffffffffffffffffffffffffffffffffff168585856040516112929291906122a4565b60006040518083038185875af1925050503d80600081146112cf576040519150601f19603f3d011682016040523d82523d6000602084013e6112d4565b606091505b5091509150816112e657805160208201fd5b505050505050565b6112f6611631565b73ffffffffffffffffffffffffffffffffffffffff8116611399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106da565b6109ce816116b2565b60335473ffffffffffffffffffffffffffffffffffffffff163314806113c757503330145b6109ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c66000000000000000000000000000060448201526064016106da565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561146557611460836117c8565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156114ea575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526114e7918101906122b4565b60015b611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016106da565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016106da565b506114608383836118d2565b60335473ffffffffffffffffffffffffffffffffffffffff163314610d86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106da565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106da565b610d866118f7565b73ffffffffffffffffffffffffffffffffffffffff81163b61186c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016106da565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6118db83611997565b6000825111806118e85750805b15611460576111d683836119e4565b600054610100900460ff1661198e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106da565b610d86336116b2565b6119a0816117c8565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611a0983836040518060600160405280602781526020016122ce60279139611a10565b9392505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611a3a9190612235565b600060405180830381855af49150503d8060008114611a75576040519150601f19603f3d011682016040523d82523d6000602084013e611a7a565b606091505b5091509150611a8b86838387611a95565b9695505050505050565b60608315611b2b578251600003611b245773ffffffffffffffffffffffffffffffffffffffff85163b611b24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106da565b5081611b35565b611b358383611b3d565b949350505050565b815115611b4d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da9190611de3565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ba557600080fd5b919050565b60008083601f840112611bbc57600080fd5b50813567ffffffffffffffff811115611bd457600080fd5b602083019150836020828501011115611bec57600080fd5b9250929050565b60008060008060008060008060c0898b031215611c0f57600080fd5b611c1889611b81565b9750611c2660208a01611b81565b9650611c3460408a01611b81565b955060608901359450608089013567ffffffffffffffff80821115611c5857600080fd5b611c648c838d01611baa565b909650945060a08b0135915080821115611c7d57600080fd5b50611c8a8b828c01611baa565b999c989b5096995094979396929594505050565b600060208284031215611cb057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a0957600080fd5b600080600080600060808688031215611cf857600080fd5b611d0186611b81565b9450611d0f60208701611b81565b935060408601359250606086013567ffffffffffffffff811115611d3257600080fd5b611d3e88828901611baa565b969995985093965092949392505050565b60008060408385031215611d6257600080fd5b611d6b83611b81565b9150611d7960208401611b81565b90509250929050565b600060208284031215611d9457600080fd5b611a0982611b81565b60008060408385031215611db057600080fd5b50508035926020909101359150565b60005b83811015611dda578181015183820152602001611dc2565b50506000910152565b6020815260008251806020840152611e02816040850160208701611dbf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611eaa57611eaa611e34565b604052919050565b600082601f830112611ec357600080fd5b813567ffffffffffffffff811115611edd57611edd611e34565b611f0e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611e63565b818152846020838601011115611f2357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611f5357600080fd5b611f5c83611b81565b9150602083013567ffffffffffffffff811115611f7857600080fd5b611f8485828601611eb2565b9150509250929050565b60008060008060808587031215611fa457600080fd5b843560ff81168114611fb557600080fd5b935060208581013567ffffffffffffffff80821115611fd357600080fd5b818801915088601f830112611fe757600080fd5b813581811115611ff957611ff9611e34565b8060051b612008858201611e63565b918252838101850191858101908c84111561202257600080fd5b86860192505b8383101561205e578235858111156120405760008081fd5b61204e8e89838a0101611eb2565b8352509186019190860190612028565b8099505050505050505061207460408601611b81565b9396929550929360600135925050565b6000806000806060858703121561209a57600080fd5b6120a385611b81565b935060208501359250604085013567ffffffffffffffff8111156120c657600080fd5b6120d287828801611baa565b95989497509550505050565b60008083601f8401126120f057600080fd5b50813567ffffffffffffffff81111561210857600080fd5b6020830191508360208260051b8501011115611bec57600080fd5b60008060008060008060008060a0898b03121561213f57600080fd5b61214889611b81565b975061215660208a01611b81565b9650604089013567ffffffffffffffff8082111561217357600080fd5b61217f8c838d016120de565b909850965060608b013591508082111561219857600080fd5b6121a48c838d016120de565b909650945060808b0135915080821115611c7d57600080fd5b60008060008060008060a087890312156121d657600080fd5b6121df87611b81565b95506121ed60208801611b81565b94506040870135935060608701359250608087013567ffffffffffffffff81111561221757600080fd5b61222389828a01611baa565b979a9699509497509295939492505050565b60008251612247818460208701611dbf565b9190910192915050565b600181811c9082168061226557607f821691505b60208210810361229e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b6000602082840312156122c657600080fd5b505191905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220742355a67f67739b0a29e8e439f363414f792fb47def3c341e1e96cfb701f93164736f6c63430008150033",
    "sourceMap": "733:3690:119:-:0;;;1088:4:12;1045:48;;1983:261:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2026:18:119;;;;2126:17;;;2141:1;2126:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2107:36:119;;;;:16;;:36;;;;;;:::i;:::-;-1:-1:-1;2153:26:119;;;;;;;;;-1:-1:-1;2153:26:119;;;;;;;;:16;:19;;:16;;-1:-1:-1;2153:19:119;;;;:::i;:::-;;;;;;;;:26;;;;;;;:::i;:::-;;2189:48;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2189:48:119;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2189:48:119;;;;;;:16;2206:1;2189:19;;;;;;;;:::i;:::-;;;;;;;;:48;;;;;;;:::i;:::-;;1983:261;733:3690;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;733:3690:119;;;-1:-1:-1;733:3690:119;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;733:3690:119;;;-1:-1:-1;733:3690:119;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:290:143;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:143;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:143:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:127;502:10;497:3;493:20;490:1;483:31;533:4;530:1;523:15;557:4;554:1;547:15;573:380;652:1;648:12;;;;695;;;716:61;;770:4;762:6;758:17;748:27;;716:61;823:2;815:6;812:14;792:18;789:38;786:161;;869:10;864:3;860:20;857:1;850:31;904:4;901:1;894:15;932:4;929:1;922:15;786:161;;573:380;;;:::o;1084:545::-;1186:2;1181:3;1178:11;1175:448;;;1222:1;1247:5;1243:2;1236:17;1292:4;1288:2;1278:19;1362:2;1350:10;1346:19;1343:1;1339:27;1333:4;1329:38;1398:4;1386:10;1383:20;1380:47;;;-1:-1:-1;1421:4:143;1380:47;1476:2;1471:3;1467:12;1464:1;1460:20;1454:4;1450:31;1440:41;;1531:82;1549:2;1542:5;1539:13;1531:82;;;1594:17;;;1575:1;1564:13;1531:82;;;1535:3;;;1175:448;1084:545;;;:::o;1805:1352::-;1925:10;;-1:-1:-1;;;;;1947:30:143;;1944:56;;;1980:18;;:::i;:::-;2009:97;2099:6;2059:38;2091:4;2085:11;2059:38;:::i;:::-;2053:4;2009:97;:::i;:::-;2161:4;;2225:2;2214:14;;2242:1;2237:663;;;;2944:1;2961:6;2958:89;;;-1:-1:-1;3013:19:143;;;3007:26;2958:89;-1:-1:-1;;1762:1:143;1758:11;;;1754:24;1750:29;1740:40;1786:1;1782:11;;;1737:57;3060:81;;2207:944;;2237:663;1031:1;1024:14;;;1068:4;1055:18;;-1:-1:-1;;2273:20:143;;;2391:236;2405:7;2402:1;2399:14;2391:236;;;2494:19;;;2488:26;2473:42;;2586:27;;;;2554:1;2542:14;;;;2421:19;;2391:236;;;2395:3;2655:6;2646:7;2643:19;2640:201;;;2716:19;;;2710:26;-1:-1:-1;;2799:1:143;2795:14;;;2811:3;2791:24;2787:37;2783:42;2768:58;2753:74;;2640:201;-1:-1:-1;;;;;2887:1:143;2871:14;;;2867:22;2854:36;;-1:-1:-1;1805:1352:143:o;:::-;733:3690:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101475760003560e01c8063715018a6116100c0578063adea0a5311610074578063bc197c8111610059578063bc197c81146104e5578063f23a6e611461052d578063f2fde38b1461057357610194565b8063adea0a53146104a5578063b61d27f6146104c557610194565b80638129fc1c116100a55780638129fc1c146104455780638da5cb5b1461045a578063a500125c1461048557610194565b8063715018a6146103ed5780637fdddfc61461040257610194565b80633659cfe6116101175780634f1ef286116100fc5780634f1ef2861461036557806352d1902d146103785780636423f1e21461039b57610194565b80633659cfe6146103185780634bd077601461033857610194565b806223de29146101da57806301ffc9a7146101ff578063150b7a0214610234578063227773ee146102aa57610194565b36610194573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101925761019234610593565b005b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101925761019234610593565b3480156101e657600080fd5b506101926101f5366004611bf3565b5050505050505050565b34801561020b57600080fd5b5061021f61021a366004611c9e565b6106e7565b60405190151581526020015b60405180910390f35b34801561024057600080fd5b5061027961024f366004611ce0565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161022b565b3480156102b657600080fd5b506101926102c5366004611d4f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260676020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b34801561032457600080fd5b50610192610333366004611d82565b6107cc565b34801561034457600080fd5b50610358610353366004611d9d565b6109d1565b60405161022b9190611de3565b610192610373366004611f40565b610a96565b34801561038457600080fd5b5061038d610c88565b60405190815260200161022b565b3480156103a757600080fd5b506066546103c89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161022b565b3480156103f957600080fd5b50610192610d74565b34801561040e57600080fd5b506103c861041d366004611d82565b60676020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561045157600080fd5b50610192610d88565b34801561046657600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff166103c8565b34801561049157600080fd5b506101926104a0366004611d82565b610f19565b3480156104b157600080fd5b506101926104c0366004611f8e565b610feb565b3480156104d157600080fd5b506101926104e0366004612084565b6111dc565b3480156104f157600080fd5b50610279610500366004612123565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561053957600080fd5b506102796105483660046121bd565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b34801561057f57600080fd5b5061019261058e366004611d82565b6112ee565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd0e30db000000000000000000000000000000000000000000000000000000000179052905160009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691849161063191612235565b60006040518083038185875af1925050503d806000811461066e576040519150601f19603f3d011682016040523d82523d6000602084013e610673565b606091505b50509050806106e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f636f6e7665727420746f2077657468206661696c65640000000000000000000060448201526064015b60405180910390fd5b5050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061077a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806107c657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016106da565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109067f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146109a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016106da565b6109b2816113a2565b604080516000808252602082019092526109ce9183919061142d565b50565b606582815481106109e157600080fd5b9060005260206000200181815481106109f957600080fd5b90600052602060002001600091509150508054610a1590612251565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4190612251565b8015610a8e5780601f10610a6357610100808354040283529160200191610a8e565b820191906000526020600020905b815481529060010190602001808311610a7157829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610b5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084016106da565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610bd07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610c73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f7879000000000000000000000000000000000000000060648201526084016106da565b610c7c826113a2565b6106e38282600161142d565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610d4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106da565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610d7c611631565b610d8660006116b2565b565b600054610100900460ff1615808015610da85750600054600160ff909116105b80610dc25750303b158015610dc2575060005460ff166001145b610e4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106da565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610eac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610eb4611729565b80156109ce57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60335473ffffffffffffffffffffffffffffffffffffffff16331480610f3e57503330145b610fa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c66000000000000000000000000000060448201526064016106da565b606680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60018460ff161115611059576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c69642074656d706c61746520696e6465780000000000000000000060448201526064016106da565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260676020526040902054166110e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f696e76616c696420677561726469616e0000000000000000000000000000000060448201526064016106da565b8360ff166000036111605782511561115b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c6964207375626a65637420706172616d730000000000000000000060448201526064016106da565b6111d6565b8360ff166001036111d65782516002146111d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c6964207375626a65637420706172616d730000000000000000000060448201526064016106da565b50505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633148061120157503330145b611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c66000000000000000000000000000060448201526064016106da565b6000808573ffffffffffffffffffffffffffffffffffffffff168585856040516112929291906122a4565b60006040518083038185875af1925050503d80600081146112cf576040519150601f19603f3d011682016040523d82523d6000602084013e6112d4565b606091505b5091509150816112e657805160208201fd5b505050505050565b6112f6611631565b73ffffffffffffffffffffffffffffffffffffffff8116611399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106da565b6109ce816116b2565b60335473ffffffffffffffffffffffffffffffffffffffff163314806113c757503330145b6109ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c66000000000000000000000000000060448201526064016106da565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561146557611460836117c8565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156114ea575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526114e7918101906122b4565b60015b611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016106da565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016106da565b506114608383836118d2565b60335473ffffffffffffffffffffffffffffffffffffffff163314610d86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106da565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106da565b610d866118f7565b73ffffffffffffffffffffffffffffffffffffffff81163b61186c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016106da565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6118db83611997565b6000825111806118e85750805b15611460576111d683836119e4565b600054610100900460ff1661198e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106da565b610d86336116b2565b6119a0816117c8565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611a0983836040518060600160405280602781526020016122ce60279139611a10565b9392505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611a3a9190612235565b600060405180830381855af49150503d8060008114611a75576040519150601f19603f3d011682016040523d82523d6000602084013e611a7a565b606091505b5091509150611a8b86838387611a95565b9695505050505050565b60608315611b2b578251600003611b245773ffffffffffffffffffffffffffffffffffffffff85163b611b24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106da565b5081611b35565b611b358383611b3d565b949350505050565b815115611b4d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da9190611de3565b803573ffffffffffffffffffffffffffffffffffffffff81168114611ba557600080fd5b919050565b60008083601f840112611bbc57600080fd5b50813567ffffffffffffffff811115611bd457600080fd5b602083019150836020828501011115611bec57600080fd5b9250929050565b60008060008060008060008060c0898b031215611c0f57600080fd5b611c1889611b81565b9750611c2660208a01611b81565b9650611c3460408a01611b81565b955060608901359450608089013567ffffffffffffffff80821115611c5857600080fd5b611c648c838d01611baa565b909650945060a08b0135915080821115611c7d57600080fd5b50611c8a8b828c01611baa565b999c989b5096995094979396929594505050565b600060208284031215611cb057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a0957600080fd5b600080600080600060808688031215611cf857600080fd5b611d0186611b81565b9450611d0f60208701611b81565b935060408601359250606086013567ffffffffffffffff811115611d3257600080fd5b611d3e88828901611baa565b969995985093965092949392505050565b60008060408385031215611d6257600080fd5b611d6b83611b81565b9150611d7960208401611b81565b90509250929050565b600060208284031215611d9457600080fd5b611a0982611b81565b60008060408385031215611db057600080fd5b50508035926020909101359150565b60005b83811015611dda578181015183820152602001611dc2565b50506000910152565b6020815260008251806020840152611e02816040850160208701611dbf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611eaa57611eaa611e34565b604052919050565b600082601f830112611ec357600080fd5b813567ffffffffffffffff811115611edd57611edd611e34565b611f0e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611e63565b818152846020838601011115611f2357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611f5357600080fd5b611f5c83611b81565b9150602083013567ffffffffffffffff811115611f7857600080fd5b611f8485828601611eb2565b9150509250929050565b60008060008060808587031215611fa457600080fd5b843560ff81168114611fb557600080fd5b935060208581013567ffffffffffffffff80821115611fd357600080fd5b818801915088601f830112611fe757600080fd5b813581811115611ff957611ff9611e34565b8060051b612008858201611e63565b918252838101850191858101908c84111561202257600080fd5b86860192505b8383101561205e578235858111156120405760008081fd5b61204e8e89838a0101611eb2565b8352509186019190860190612028565b8099505050505050505061207460408601611b81565b9396929550929360600135925050565b6000806000806060858703121561209a57600080fd5b6120a385611b81565b935060208501359250604085013567ffffffffffffffff8111156120c657600080fd5b6120d287828801611baa565b95989497509550505050565b60008083601f8401126120f057600080fd5b50813567ffffffffffffffff81111561210857600080fd5b6020830191508360208260051b8501011115611bec57600080fd5b60008060008060008060008060a0898b03121561213f57600080fd5b61214889611b81565b975061215660208a01611b81565b9650604089013567ffffffffffffffff8082111561217357600080fd5b61217f8c838d016120de565b909850965060608b013591508082111561219857600080fd5b6121a48c838d016120de565b909650945060808b0135915080821115611c7d57600080fd5b60008060008060008060a087890312156121d657600080fd5b6121df87611b81565b95506121ed60208801611b81565b94506040870135935060608701359250608087013567ffffffffffffffff81111561221757600080fd5b61222389828a01611baa565b979a9699509497509295939492505050565b60008251612247818460208701611dbf565b9190910192915050565b600181811c9082168061226557607f821691505b60208210810361229e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b6000602082840312156122c657600080fd5b505191905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220742355a67f67739b0a29e8e439f363414f792fb47def3c341e1e96cfb701f93164736f6c63430008150033",
    "sourceMap": "733:3690:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:10;:18;1651:4;1637:18;;1633:70;;1671:21;1682:9;1671:10;:21::i;:::-;733:3690;;1299:10;:18;1313:4;1299:18;;1295:70;;1333:21;1344:9;1333:10;:21::i;581:176:47:-;;;;;;;;;;-1:-1:-1;581:176:47;;;;;:::i;:::-;;;;;;;;;;1489:298;;;;;;;;;;-1:-1:-1;1489:298:47;;;;;:::i;:::-;;:::i;:::-;;;2084:14:143;;2077:22;2059:41;;2047:2;2032:18;1489:298:47;;;;;;;;763:212;;;;;;;;;;-1:-1:-1;763:212:47;;;;;:::i;:::-;927:41;763:212;;;;;;;;;;;2916:66:143;2904:79;;;2886:98;;2874:2;2859:18;763:212:47;2742:248:143;3442:125:119;;;;;;;;;;-1:-1:-1;3442:125:119;;;;;:::i;:::-;3519:28;;;;;;;;:14;:28;;;;;:41;;;;;;;;;;;3442:125;3143:195:12;;;;;;;;;;-1:-1:-1;3143:195:12;;;;;:::i;:::-;;:::i;898:34:119:-;;;;;;;;;;-1:-1:-1;898:34:119;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3657:220:12:-;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;:::-;;;6086:25:143;;;6074:2;6059:18;2762:131:12;5940:177:143;939:27:119;;;;;;;;;;-1:-1:-1;939:27:119;;;;;;;;;;;6298:42:143;6286:55;;;6268:74;;6256:2;6241:18;939:27:119;6122:226:143;2064:101:0;;;;;;;;;;;;;:::i;973:49:119:-;;;;;;;;;;-1:-1:-1;973:49:119;;;;;:::i;:::-;;;;;;;;;;;;;;;;2290:74;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;;;1441:85;;4302:119:119;;;;;;;;;;-1:-1:-1;4302:119:119;;;;;:::i;:::-;;:::i;3606:690::-;;;;;;;;;;-1:-1:-1;3606:690:119;;;;;:::i;:::-;;:::i;2583:303::-;;;;;;;;;;-1:-1:-1;2583:303:119;;;;;:::i;:::-;;:::i;1219:264:47:-;;;;;;;;;;-1:-1:-1;1219:264:47;;;;;:::i;:::-;1428:48;1219:264;;;;;;;;;;;981:232;;;;;;;;;;-1:-1:-1;981:232:47;;;;;:::i;:::-;1163:43;981:232;;;;;;;;;2314:198:0;;;;;;;;;;-1:-1:-1;2314:198:0;;;;;:::i;:::-;;:::i;2975:195:119:-;3074:36;;;;;;;;;;;;;;;;;;;;;;3049:62;;3031:12;;3049:9;:4;:9;;3066:6;;3049:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3030:81;;;3129:7;3121:42;;;;;;;11160:2:143;3121:42:119;;;11142:21:143;11199:2;11179:18;;;11172:30;11238:24;11218:18;;;11211:52;11280:18;;3121:42:119;;;;;;;;;3020:150;2975:195;:::o;1489:298:47:-;1576:4;1611:48;;;1626:33;1611:48;;:113;;-1:-1:-1;1675:49:47;;;1690:34;1675:49;1611:113;:169;;;-1:-1:-1;1740:40:47;;;1755:25;1740:40;1611:169;1592:188;1489:298;-1:-1:-1;;1489:298:47:o;3143:195:12:-;1637:23;1654:6;1637:23;1645:4;1637:23;1629:80;;;;;;;11511:2:143;1629:80:12;;;11493:21:143;11550:2;11530:18;;;11523:30;11589:34;11569:18;;;11562:62;11660:14;11640:18;;;11633:42;11692:19;;1629:80:12;11309:408:143;1629:80:12;1751:6;1727:30;;:20;1030:66:9;1254:54;;;;1175:140;1727:20:12;:30;;;1719:87;;;;;;;11924:2:143;1719:87:12;;;11906:21:143;11963:2;11943:18;;;11936:30;12002:34;11982:18;;;11975:62;12073:14;12053:18;;;12046:42;12105:19;;1719:87:12;11722:408:143;1719:87:12;3224:36:::1;3242:17;3224;:36::i;:::-;3311:12;::::0;;3321:1:::1;3311:12:::0;;;::::1;::::0;::::1;::::0;;;3270:61:::1;::::0;3292:17;;3311:12;3270:21:::1;:61::i;:::-;3143:195:::0;:::o;898:34:119:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3657:220:12:-;1637:23;1654:6;1637:23;1645:4;1637:23;1629:80;;;;;;;11511:2:143;1629:80:12;;;11493:21:143;11550:2;11530:18;;;11523:30;11589:34;11569:18;;;11562:62;11660:14;11640:18;;;11633:42;11692:19;;1629:80:12;11309:408:143;1629:80:12;1751:6;1727:30;;:20;1030:66:9;1254:54;;;;1175:140;1727:20:12;:30;;;1719:87;;;;;;;11924:2:143;1719:87:12;;;11906:21:143;11963:2;11943:18;;;11936:30;12002:34;11982:18;;;11975:62;12073:14;12053:18;;;12046:42;12105:19;;1719:87:12;11722:408:143;1719:87:12;3772:36:::1;3790:17;3772;:36::i;:::-;3818:52;3840:17;3859:4;3865;3818:21;:52::i;2762:131::-:0;2840:7;2080:4;2072:23;2089:6;2072:23;;2064:92;;;;;;;12779:2:143;2064:92:12;;;12761:21:143;12818:2;12798:18;;;12791:30;12857:34;12837:18;;;12830:62;12928:26;12908:18;;;12901:54;12972:19;;2064:92:12;12577:420:143;2064:92:12;-1:-1:-1;1030:66:9::1;2762:131:12::0;:::o;2064:101:0:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;2290:74:119:-;3279:19:1;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:1;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:1;1713:19:2;:23;;;3387:66:1;;-1:-1:-1;3436:12:1;;;;;:17;3387:66;3325:201;;;;;;;13204:2:143;3325:201:1;;;13186:21:143;13243:2;13223:18;;;13216:30;13282:34;13262:18;;;13255:62;13353:16;13333:18;;;13326:44;13387:19;;3325:201:1;13002:410:143;3325:201:1;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;2341:16:119::1;:14;:16::i;:::-;3651:14:1::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;13569:36:143;;3721:14:1;;13557:2:143;13542:18;3721:14:1;;;;;;;3269:483;2290:74:119:o;4302:119::-;1513:6:0;;;;1828:10:119;:21;;:52;;-1:-1:-1;1853:10:119;1875:4;1853:27;1828:52;1820:83;;;;;;;13818:2:143;1820:83:119;;;13800:21:143;13857:2;13837:18;;;13830:30;13896:20;13876:18;;;13869:48;13934:18;;1820:83:119;13616:342:143;1820:83:119;4384:12:::1;:30:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4302:119::o;3606:690::-;3831:1;3814:13;:18;;;;3806:53;;;;;;;14165:2:143;3806:53:119;;;14147:21:143;14204:2;14184:18;;;14177:30;14243:24;14223:18;;;14216:52;14285:18;;3806:53:119;13963:346:143;3806:53:119;3877:42;:28;;;3917:1;3877:28;;;:14;:28;;;;;;;3869:71;;;;;;;14516:2:143;3869:71:119;;;14498:21:143;14555:2;14535:18;;;14528:30;14594:18;14574;;;14567:46;14630:18;;3869:71:119;14314:340:143;3869:71:119;3953:13;:18;;3970:1;3953:18;3950:340;;3995:20;;:25;3987:60;;;;;;;14861:2:143;3987:60:119;;;14843:21:143;14900:2;14880:18;;;14873:30;14939:24;14919:18;;;14912:52;14981:18;;3987:60:119;14659:346:143;3987:60:119;3950:340;;;4126:13;:18;;4143:1;4126:18;4123:167;;4168:13;:20;4192:1;4168:25;4160:60;;;;;;;14861:2:143;4160:60:119;;;14843:21:143;14900:2;14880:18;;;14873:30;14939:24;14919:18;;;14912:52;14981:18;;4160:60:119;14659:346:143;4160:60:119;3606:690;;;;:::o;2583:303::-;1513:6:0;;;;1828:10:119;:21;;:52;;-1:-1:-1;1853:10:119;1875:4;1853:27;1828:52;1820:83;;;;;;;13818:2:143;1820:83:119;;;13800:21:143;13857:2;13837:18;;;13830:30;13896:20;13876:18;;;13869:48;13934:18;;1820:83:119;13616:342:143;1820:83:119;2684:12:::1;2698:19:::0;2721:6:::1;:11;;2740:5;2747:4;;2721:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2683:69;;;;2768:7;2763:117;;2848:6;2842:13;2837:2;2829:6;2825:15;2818:38;2763:117;2673:213;;2583:303:::0;;;;:::o;2314:198:0:-;1334:13;:11;:13::i;:::-;2402:22:::1;::::0;::::1;2394:73;;;::::0;::::1;::::0;;15488:2:143;2394:73:0::1;::::0;::::1;15470:21:143::0;15527:2;15507:18;;;15500:30;15566:34;15546:18;;;15539:62;15637:8;15617:18;;;15610:36;15663:19;;2394:73:0::1;15286:402:143::0;2394:73:0::1;2477:28;2496:8;2477:18;:28::i;3299:86:119:-:0;1513:6:0;;;;1828:10:119;:21;;:52;;-1:-1:-1;1853:10:119;1875:4;1853:27;1828:52;1820:83;;;;;;;13818:2:143;1820:83:119;;;13800:21:143;13857:2;13837:18;;;13830:30;13896:20;13876:18;;;13869:48;13934:18;;1820:83:119;13616:342:143;2494:922:9;689:66;2910:48;;;2906:504;;;2974:37;2993:17;2974:18;:37::i;:::-;2494:922;;;:::o;2906:504::-;3064:17;3046:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:52:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3042:291;;3262:56;;;;;16084:2:143;3262:56:9;;;16066:21:143;16123:2;16103:18;;;16096:30;16162:34;16142:18;;;16135:62;16233:16;16213:18;;;16206:44;16267:19;;3262:56:9;15882:410:143;3042:291:9;1030:66;3148:28;;3140:82;;;;;;;16499:2:143;3140:82:9;;;16481:21:143;16538:2;16518:18;;;16511:30;16577:34;16557:18;;;16550:62;16648:11;16628:18;;;16621:39;16677:19;;3140:82:9;16297:405:143;3140:82:9;3099:138;3346:53;3364:17;3383:4;3389:9;3346:17;:53::i;1599:130:0:-;1513:6;;1662:23;1513:6;929:10:3;1662:23:0;1654:68;;;;;;;16909:2:143;1654:68:0;;;16891:21:143;;;16928:18;;;16921:30;16987:34;16967:18;;;16960:62;17039:18;;1654:68:0;16707:356:143;2666:187:0;2758:6;;;;2774:17;;;;;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:1;;;;;;;5366:69;;;;;;;17270:2:143;5366:69:1;;;17252:21:143;17309:2;17289:18;;;17282:30;17348:34;17328:18;;;17321:62;17419:13;17399:18;;;17392:41;17450:19;;5366:69:1;17068:407:143;5366:69:1;1065:26:0::1;:24;:26::i;1406:259:9:-:0;1713:19:2;;;;1479:95:9;;;;;;;17682:2:143;1479:95:9;;;17664:21:143;17721:2;17701:18;;;17694:30;17760:34;17740:18;;;17733:62;17831:15;17811:18;;;17804:43;17864:19;;1479:95:9;17480:409:143;1479:95:9;1030:66;1584:74;;;;;;;;;;;;;;;1406:259::o;2057:265::-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;1104:111:0:-;5374:13:1;;;;;;;5366:69;;;;;;;17270:2:143;5366:69:1;;;17252:21:143;17309:2;17289:18;;;17282:30;17348:34;17328:18;;;17321:62;17419:13;17399:18;;;17392:41;17450:19;;5366:69:1;17068:407:143;5366:69:1;1176:32:0::1;929:10:3::0;1176:18:0::1;:32::i;1771:152:9:-:0;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;;;;;;;;;;1771:152;:::o;6674:198:23:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:23:o;7058:325::-;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:23:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1713:19:2;;;;8113:60:23;;;;;;;18096:2:143;8113:60:23;;;18078:21:143;18135:2;18115:18;;;18108:30;18174:31;18154:18;;;18147:59;18223:18;;8113:60:23;17894:353:143;8113:60:23;-1:-1:-1;8208:10:23;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:196:143:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;266:8;276:6;330:3;323:4;315:6;311:17;307:27;297:55;;348:1;345;338:12;297:55;-1:-1:-1;371:20:143;;414:18;403:30;;400:50;;;446:1;443;436:12;400:50;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:59;;;552:1;549;542:12;497:59;215:347;;;;;:::o;567:1010::-;693:6;701;709;717;725;733;741;749;802:3;790:9;781:7;777:23;773:33;770:53;;;819:1;816;809:12;770:53;842:29;861:9;842:29;:::i;:::-;832:39;;890:38;924:2;913:9;909:18;890:38;:::i;:::-;880:48;;947:38;981:2;970:9;966:18;947:38;:::i;:::-;937:48;;1032:2;1021:9;1017:18;1004:32;994:42;;1087:3;1076:9;1072:19;1059:33;1111:18;1152:2;1144:6;1141:14;1138:34;;;1168:1;1165;1158:12;1138:34;1207:58;1257:7;1248:6;1237:9;1233:22;1207:58;:::i;:::-;1284:8;;-1:-1:-1;1181:84:143;-1:-1:-1;1372:3:143;1357:19;;1344:33;;-1:-1:-1;1389:16:143;;;1386:36;;;1418:1;1415;1408:12;1386:36;;1457:60;1509:7;1498:8;1487:9;1483:24;1457:60;:::i;:::-;567:1010;;;;-1:-1:-1;567:1010:143;;-1:-1:-1;567:1010:143;;;;;;1536:8;-1:-1:-1;;;567:1010:143:o;1582:332::-;1640:6;1693:2;1681:9;1672:7;1668:23;1664:32;1661:52;;;1709:1;1706;1699:12;1661:52;1748:9;1735:23;1798:66;1791:5;1787:78;1780:5;1777:89;1767:117;;1880:1;1877;1870:12;2111:626;2208:6;2216;2224;2232;2240;2293:3;2281:9;2272:7;2268:23;2264:33;2261:53;;;2310:1;2307;2300:12;2261:53;2333:29;2352:9;2333:29;:::i;:::-;2323:39;;2381:38;2415:2;2404:9;2400:18;2381:38;:::i;:::-;2371:48;;2466:2;2455:9;2451:18;2438:32;2428:42;;2521:2;2510:9;2506:18;2493:32;2548:18;2540:6;2537:30;2534:50;;;2580:1;2577;2570:12;2534:50;2619:58;2669:7;2660:6;2649:9;2645:22;2619:58;:::i;:::-;2111:626;;;;-1:-1:-1;2111:626:143;;-1:-1:-1;2696:8:143;;2593:84;2111:626;-1:-1:-1;;;2111:626:143:o;2995:260::-;3063:6;3071;3124:2;3112:9;3103:7;3099:23;3095:32;3092:52;;;3140:1;3137;3130:12;3092:52;3163:29;3182:9;3163:29;:::i;:::-;3153:39;;3211:38;3245:2;3234:9;3230:18;3211:38;:::i;:::-;3201:48;;2995:260;;;;;:::o;3260:186::-;3319:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:52;;;3388:1;3385;3378:12;3340:52;3411:29;3430:9;3411:29;:::i;3451:248::-;3519:6;3527;3580:2;3568:9;3559:7;3555:23;3551:32;3548:52;;;3596:1;3593;3586:12;3548:52;-1:-1:-1;;3619:23:143;;;3689:2;3674:18;;;3661:32;;-1:-1:-1;3451:248:143:o;3704:250::-;3789:1;3799:113;3813:6;3810:1;3807:13;3799:113;;;3889:11;;;3883:18;3870:11;;;3863:39;3835:2;3828:10;3799:113;;;-1:-1:-1;;3946:1:143;3928:16;;3921:27;3704:250::o;3959:455::-;4108:2;4097:9;4090:21;4071:4;4140:6;4134:13;4183:6;4178:2;4167:9;4163:18;4156:34;4199:79;4271:6;4266:2;4255:9;4251:18;4246:2;4238:6;4234:15;4199:79;:::i;:::-;4330:2;4318:15;4335:66;4314:88;4299:104;;;;4405:2;4295:113;;3959:455;-1:-1:-1;;3959:455:143:o;4419:184::-;4471:77;4468:1;4461:88;4568:4;4565:1;4558:15;4592:4;4589:1;4582:15;4608:334;4679:2;4673:9;4735:2;4725:13;;4740:66;4721:86;4709:99;;4838:18;4823:34;;4859:22;;;4820:62;4817:88;;;4885:18;;:::i;:::-;4921:2;4914:22;4608:334;;-1:-1:-1;4608:334:143:o;4947:589::-;4989:5;5042:3;5035:4;5027:6;5023:17;5019:27;5009:55;;5060:1;5057;5050:12;5009:55;5096:6;5083:20;5122:18;5118:2;5115:26;5112:52;;;5144:18;;:::i;:::-;5188:114;5296:4;5227:66;5220:4;5216:2;5212:13;5208:86;5204:97;5188:114;:::i;:::-;5327:2;5318:7;5311:19;5373:3;5366:4;5361:2;5353:6;5349:15;5345:26;5342:35;5339:55;;;5390:1;5387;5380:12;5339:55;5455:2;5448:4;5440:6;5436:17;5429:4;5420:7;5416:18;5403:55;5503:1;5478:16;;;5496:4;5474:27;5467:38;;;;5482:7;4947:589;-1:-1:-1;;;4947:589:143:o;5541:394::-;5618:6;5626;5679:2;5667:9;5658:7;5654:23;5650:32;5647:52;;;5695:1;5692;5685:12;5647:52;5718:29;5737:9;5718:29;:::i;:::-;5708:39;;5798:2;5787:9;5783:18;5770:32;5825:18;5817:6;5814:30;5811:50;;;5857:1;5854;5847:12;5811:50;5880:49;5921:7;5912:6;5901:9;5897:22;5880:49;:::i;:::-;5870:59;;;5541:394;;;;;:::o;6353:1465::-;6471:6;6479;6487;6495;6548:3;6536:9;6527:7;6523:23;6519:33;6516:53;;;6565:1;6562;6555:12;6516:53;6604:9;6591:23;6654:4;6647:5;6643:16;6636:5;6633:27;6623:55;;6674:1;6671;6664:12;6623:55;6697:5;-1:-1:-1;6721:2:143;6759:18;;;6746:32;6797:18;6827:14;;;6824:34;;;6854:1;6851;6844:12;6824:34;6892:6;6881:9;6877:22;6867:32;;6937:7;6930:4;6926:2;6922:13;6918:27;6908:55;;6959:1;6956;6949:12;6908:55;6995:2;6982:16;7017:2;7013;7010:10;7007:36;;;7023:18;;:::i;:::-;7069:2;7066:1;7062:10;7092:28;7116:2;7112;7108:11;7092:28;:::i;:::-;7154:15;;;7224:11;;;7220:20;;;7185:12;;;;7252:19;;;7249:39;;;7284:1;7281;7274:12;7249:39;7316:2;7312;7308:11;7297:22;;7328:352;7344:6;7339:3;7336:15;7328:352;;;7430:3;7417:17;7466:2;7453:11;7450:19;7447:109;;;7510:1;7539:2;7535;7528:14;7447:109;7581:56;7629:7;7624:2;7610:11;7606:2;7602:20;7598:29;7581:56;:::i;:::-;7569:69;;-1:-1:-1;7361:12:143;;;;7658;;;;7328:352;;;7699:5;7689:15;;;;;;;;;7723:38;7757:2;7746:9;7742:18;7723:38;:::i;:::-;6353:1465;;;;-1:-1:-1;7713:48:143;;7808:2;7793:18;7780:32;;-1:-1:-1;;6353:1465:143:o;7823:551::-;7911:6;7919;7927;7935;7988:2;7976:9;7967:7;7963:23;7959:32;7956:52;;;8004:1;8001;7994:12;7956:52;8027:29;8046:9;8027:29;:::i;:::-;8017:39;;8103:2;8092:9;8088:18;8075:32;8065:42;;8158:2;8147:9;8143:18;8130:32;8185:18;8177:6;8174:30;8171:50;;;8217:1;8214;8207:12;8171:50;8256:58;8306:7;8297:6;8286:9;8282:22;8256:58;:::i;:::-;7823:551;;;;-1:-1:-1;8333:8:143;-1:-1:-1;;;;7823:551:143:o;8379:367::-;8442:8;8452:6;8506:3;8499:4;8491:6;8487:17;8483:27;8473:55;;8524:1;8521;8514:12;8473:55;-1:-1:-1;8547:20:143;;8590:18;8579:30;;8576:50;;;8622:1;8619;8612:12;8576:50;8659:4;8651:6;8647:17;8635:29;;8719:3;8712:4;8702:6;8699:1;8695:14;8687:6;8683:27;8679:38;8676:47;8673:67;;;8736:1;8733;8726:12;8751:1210;8911:6;8919;8927;8935;8943;8951;8959;8967;9020:3;9008:9;8999:7;8995:23;8991:33;8988:53;;;9037:1;9034;9027:12;8988:53;9060:29;9079:9;9060:29;:::i;:::-;9050:39;;9108:38;9142:2;9131:9;9127:18;9108:38;:::i;:::-;9098:48;;9197:2;9186:9;9182:18;9169:32;9220:18;9261:2;9253:6;9250:14;9247:34;;;9277:1;9274;9267:12;9247:34;9316:70;9378:7;9369:6;9358:9;9354:22;9316:70;:::i;:::-;9405:8;;-1:-1:-1;9290:96:143;-1:-1:-1;9493:2:143;9478:18;;9465:32;;-1:-1:-1;9509:16:143;;;9506:36;;;9538:1;9535;9528:12;9506:36;9577:72;9641:7;9630:8;9619:9;9615:24;9577:72;:::i;:::-;9668:8;;-1:-1:-1;9551:98:143;-1:-1:-1;9756:3:143;9741:19;;9728:33;;-1:-1:-1;9773:16:143;;;9770:36;;;9802:1;9799;9792:12;9966:695;10072:6;10080;10088;10096;10104;10112;10165:3;10153:9;10144:7;10140:23;10136:33;10133:53;;;10182:1;10179;10172:12;10133:53;10205:29;10224:9;10205:29;:::i;:::-;10195:39;;10253:38;10287:2;10276:9;10272:18;10253:38;:::i;:::-;10243:48;;10338:2;10327:9;10323:18;10310:32;10300:42;;10389:2;10378:9;10374:18;10361:32;10351:42;;10444:3;10433:9;10429:19;10416:33;10472:18;10464:6;10461:30;10458:50;;;10504:1;10501;10494:12;10458:50;10543:58;10593:7;10584:6;10573:9;10569:22;10543:58;:::i;:::-;9966:695;;;;-1:-1:-1;9966:695:143;;-1:-1:-1;9966:695:143;;10620:8;;9966:695;-1:-1:-1;;;9966:695:143:o;10666:287::-;10795:3;10833:6;10827:13;10849:66;10908:6;10903:3;10896:4;10888:6;10884:17;10849:66;:::i;:::-;10931:16;;;;;10666:287;-1:-1:-1;;10666:287:143:o;12135:437::-;12214:1;12210:12;;;;12257;;;12278:61;;12332:4;12324:6;12320:17;12310:27;;12278:61;12385:2;12377:6;12374:14;12354:18;12351:38;12348:218;;12422:77;12419:1;12412:88;12523:4;12520:1;12513:15;12551:4;12548:1;12541:15;12348:218;;12135:437;;;:::o;15010:271::-;15193:6;15185;15180:3;15167:33;15149:3;15219:16;;15244:13;;;15219:16;15010:271;-1:-1:-1;15010:271:143:o;15693:184::-;15763:6;15816:2;15804:9;15795:7;15791:23;15787:32;15784:52;;;15832:1;15829;15822:12;15784:52;-1:-1:-1;15855:16:143;;15693:184;-1:-1:-1;15693:184:143:o",
    "linkReferences": {},
    "immutableReferences": {
      "547": [
        {
          "start": 2019,
          "length": 32
        },
        {
          "start": 2195,
          "length": 32
        },
        {
          "start": 2733,
          "length": 32
        },
        {
          "start": 2909,
          "length": 32
        },
        {
          "start": 3234,
          "length": 32
        }
      ],
      "59291": [
        {
          "start": 356,
          "length": 32
        },
        {
          "start": 428,
          "length": 32
        },
        {
          "start": 1541,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "dkimRegistry()": "6423f1e2",
    "execute(address,uint256,bytes)": "b61d27f6",
    "guardingWallet(address)": "7fdddfc6",
    "initialize()": "8129fc1c",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "recover(uint8,bytes[],address,bytes32)": "adea0a53",
    "renounceOwnership()": "715018a6",
    "setGuard(address,address)": "227773ee",
    "subjectTemplates(uint256,uint256)": "4bd07760",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
    "transferOwnership(address)": "f2fde38b",
    "updateDKIMRegistry(address)": "a500125c",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"dkimRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guardingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"templateIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes[]\",\"name\":\"subjectParams\",\"type\":\"bytes[]\"},{\"internalType\":\"address\",\"name\":\"guardianAddr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"emailNullifier\",\"type\":\"bytes32\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guardianAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletAddr\",\"type\":\"address\"}],\"name\":\"setGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subjectTemplates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDKIMRegistry\",\"type\":\"address\"}],\"name\":\"updateDKIMRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"External contracts should use `call` to deposit ETH if needed\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"wethAddress\":\"Address of the WETH contract\"}},\"execute(address,uint256,bytes)\":{\"params\":{\"data\":\"Encoded data of the function to call\",\"target\":\"Address of the contract to call\",\"value\":\"Amount of ETH to send\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"EmailWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(address,uint256,bytes)\":{\"notice\":\"Execute a function on an external contract\"},\"initialize()\":{\"notice\":\"Initialize the contract\"},\"recover(uint8,bytes[],address,bytes32)\":{\"notice\":\"account recovery\"},\"setGuard(address,address)\":{\"notice\":\"Set guarding wallet for a guardian\"}},\"notice\":\"Simple Wallet contract to be used as the EmailWallet for usersThis wallet can `execute` any function on any contract provided calle is `owner`The deployed is the `owner` by default (EmailWalletCore)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@gnosis.pm/=../../node_modules/@gnosis.pm/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@uniswap/=../../node_modules/@uniswap/\",\":@zk-email/=../../node_modules/@zk-email/\",\":accountabstraction/=../../node_modules/accountabstraction/\",\":base64-sol/=../../node_modules/base64-sol/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/\",\":solady/=../../node_modules/solady/src/\"]},\"sources\":{\"../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"../../node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"../../node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"../../node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"../../node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"../../node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"../../node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"../../node_modules/accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]},\"src/Wallet.sol\":{\"keccak256\":\"0x11c4ac93844cad3c11936db0b0e5d5e09747fdc486c3ff6d5ecfd623ffdff7f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f1cdd74ff3b145cd5fd79235acaae7bac40e4f4e146e90dd36d49c0c969f00d\",\"dweb:/ipfs/QmdpSpbqezF3FA9YtUpMXGt9SDmmr7fQnFBKYBf15tZbxE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wethAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dkimRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "guardingWallet",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "templateIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes[]",
              "name": "subjectParams",
              "type": "bytes[]"
            },
            {
              "internalType": "address",
              "name": "guardianAddr",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "emailNullifier",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "recover"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "guardianAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGuard"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "subjectTemplates",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tokensReceived"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newDKIMRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDKIMRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "wethAddress": "Address of the WETH contract"
            }
          },
          "execute(address,uint256,bytes)": {
            "params": {
              "data": "Encoded data of the function to call",
              "target": "Address of the contract to call",
              "value": "Amount of ETH to send"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute(address,uint256,bytes)": {
            "notice": "Execute a function on an external contract"
          },
          "initialize()": {
            "notice": "Initialize the contract"
          },
          "recover(uint8,bytes[],address,bytes32)": {
            "notice": "account recovery"
          },
          "setGuard(address,address)": {
            "notice": "Set guarding wallet for a guardian"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@gnosis.pm/=../../node_modules/@gnosis.pm/",
        "@openzeppelin/=../../node_modules/@openzeppelin/",
        "@uniswap/=../../node_modules/@uniswap/",
        "@zk-email/=../../node_modules/@zk-email/",
        "accountabstraction/=../../node_modules/accountabstraction/",
        "base64-sol/=../../node_modules/base64-sol/",
        "ds-test/=../../node_modules/ds-test/src/",
        "forge-std/=../../node_modules/forge-std/src/",
        "hardhat-deploy/=../../node_modules/hardhat-deploy/",
        "snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/",
        "solady/=../../node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Wallet.sol": "Wallet"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "../../node_modules/accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752",
        "urls": [
          "bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3",
          "dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB"
        ],
        "license": "GPL-3.0"
      },
      "src/Wallet.sol": {
        "keccak256": "0x11c4ac93844cad3c11936db0b0e5d5e09747fdc486c3ff6d5ecfd623ffdff7f0",
        "urls": [
          "bzz-raw://2f1cdd74ff3b145cd5fd79235acaae7bac40e4f4e146e90dd36d49c0c969f00d",
          "dweb:/ipfs/QmdpSpbqezF3FA9YtUpMXGt9SDmmr7fQnFBKYBf15tZbxE"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "src/Wallet.sol:Wallet",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "src/Wallet.sol:Wallet",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 67690,
        "contract": "src/Wallet.sol:Wallet",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "src/Wallet.sol:Wallet",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "src/Wallet.sol:Wallet",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 59295,
        "contract": "src/Wallet.sol:Wallet",
        "label": "subjectTemplates",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_array(t_string_storage)dyn_storage)dyn_storage"
      },
      {
        "astId": 59297,
        "contract": "src/Wallet.sol:Wallet",
        "label": "dkimRegistry",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 59301,
        "contract": "src/Wallet.sol:Wallet",
        "label": "guardingWallet",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_array(t_string_storage)dyn_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[][]",
        "numberOfBytes": "32",
        "base": "t_array(t_string_storage)dyn_storage"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ast": {
    "absolutePath": "src/Wallet.sol",
    "id": 59553,
    "exportedSymbols": {
      "IERC1155Receiver": [
        753
      ],
      "IERC165": [
        2885
      ],
      "IERC20": [
        1418
      ],
      "IERC721Receiver": [
        1928
      ],
      "IERC777Recipient": [
        1948
      ],
      "OwnableUpgradeable": [
        131
      ],
      "TokenCallbackHandler": [
        4145
      ],
      "UUPSUpgradeable": [
        647
      ],
      "Wallet": [
        59552
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4392:119",
    "nodes": [
      {
        "id": 59275,
        "nodeType": "PragmaDirective",
        "src": "32:24:119",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 59277,
        "nodeType": "ImportDirective",
        "src": "58:88:119",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59553,
        "sourceUnit": 648,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59276,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 647,
              "src": "66:15:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59279,
        "nodeType": "ImportDirective",
        "src": "147:101:119",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59553,
        "sourceUnit": 132,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59278,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131,
              "src": "155:18:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59281,
        "nodeType": "ImportDirective",
        "src": "249:70:119",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59553,
        "sourceUnit": 1419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59280,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1418,
              "src": "257:6:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59282,
        "nodeType": "ImportDirective",
        "src": "320:80:119",
        "nodes": [],
        "absolutePath": "../../node_modules/accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "file": "accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59553,
        "sourceUnit": 4146,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59552,
        "nodeType": "ContractDefinition",
        "src": "733:3690:119",
        "nodes": [
          {
            "id": 59291,
            "nodeType": "VariableDeclaration",
            "src": "816:22:119",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "weth",
            "nameLocation": "834:4:119",
            "scope": 59552,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59290,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "816:7:119",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59295,
            "nodeType": "VariableDeclaration",
            "src": "898:34:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "4bd07760",
            "mutability": "mutable",
            "name": "subjectTemplates",
            "nameLocation": "916:16:119",
            "scope": 59552,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
              "typeString": "string[][]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "id": 59292,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "898:6:119",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 59293,
                "nodeType": "ArrayTypeName",
                "src": "898:8:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              },
              "id": 59294,
              "nodeType": "ArrayTypeName",
              "src": "898:10:119",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage_ptr",
                "typeString": "string[][]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59297,
            "nodeType": "VariableDeclaration",
            "src": "939:27:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "6423f1e2",
            "mutability": "mutable",
            "name": "dkimRegistry",
            "nameLocation": "954:12:119",
            "scope": 59552,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59296,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "939:7:119",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59301,
            "nodeType": "VariableDeclaration",
            "src": "973:49:119",
            "nodes": [],
            "constant": false,
            "functionSelector": "7fdddfc6",
            "mutability": "mutable",
            "name": "guardingWallet",
            "nameLocation": "1008:14:119",
            "scope": 59552,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 59300,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59298,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "981:7:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "973:27:119",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59299,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "992:7:119",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 59317,
            "nodeType": "FunctionDefinition",
            "src": "1257:114:119",
            "nodes": [],
            "body": {
              "id": 59316,
              "nodeType": "Block",
              "src": "1285:86:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 59308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 59305,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1299:3:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1303:6:119",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1299:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 59307,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59291,
                      "src": "1313:4:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1299:18:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59315,
                  "nodeType": "IfStatement",
                  "src": "1295:70:119",
                  "trueBody": {
                    "id": 59314,
                    "nodeType": "Block",
                    "src": "1319:46:119",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 59310,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1344:3:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 59311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1348:5:119",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1344:9:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 59309,
                            "name": "_ethToWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59453,
                            "src": "1333:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 59312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1333:21:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59313,
                        "nodeType": "ExpressionStatement",
                        "src": "1333:21:119"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 59302,
              "nodeType": "StructuredDocumentation",
              "src": "1029:223:119",
              "text": "@notice Fallback function to receive ETH\n @notice For convenience, this contract will convert ETH to WETH always\n @notice Conversion is not done if the sender is WETH (i.e when user call `weth.withdraw()`)"
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:2:119"
            },
            "returnParameters": {
              "id": 59304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:0:119"
            },
            "scope": 59552,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59333,
            "nodeType": "FunctionDefinition",
            "src": "1596:113:119",
            "nodes": [],
            "body": {
              "id": 59332,
              "nodeType": "Block",
              "src": "1623:86:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 59324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 59321,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1637:3:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1641:6:119",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1637:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 59323,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59291,
                      "src": "1651:4:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1637:18:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59331,
                  "nodeType": "IfStatement",
                  "src": "1633:70:119",
                  "trueBody": {
                    "id": 59330,
                    "nodeType": "Block",
                    "src": "1657:46:119",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 59326,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1682:3:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 59327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1686:5:119",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1682:9:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 59325,
                            "name": "_ethToWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59453,
                            "src": "1671:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 59328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1671:21:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59329,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:21:119"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 59318,
              "nodeType": "StructuredDocumentation",
              "src": "1377:214:119",
              "text": "@notice Function to receive ETH\n @notice For convenience, this contract will convert ETH to WETH always\n @notice Conversion is not done if the sender is WETH (i.e when user call `weth.withdraw()`)"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:2:119"
            },
            "returnParameters": {
              "id": 59320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:0:119"
            },
            "scope": 59552,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59355,
            "nodeType": "ModifierDefinition",
            "src": "1787:134:119",
            "nodes": [],
            "body": {
              "id": 59354,
              "nodeType": "Block",
              "src": "1810:111:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 59349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59337,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1828:3:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 59338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1832:6:119",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1828:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 59339,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1842:5:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 59340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1842:7:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1828:21:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59342,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1853:3:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 59343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1857:6:119",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1853:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 59346,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1875:4:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wallet_$59552",
                                  "typeString": "contract Wallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Wallet_$59552",
                                  "typeString": "contract Wallet"
                                }
                              ],
                              "id": 59345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1867:7:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59344,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1867:7:119",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1867:13:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1853:27:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1828:52:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572206f722073656c66",
                        "id": 59350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1882:20:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b2bc3dd3a4739eb663e1011961ce1db37b62f9bbdeb3ea69799c7c58637c9a4",
                          "typeString": "literal_string \"only owner or self\""
                        },
                        "value": "only owner or self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b2bc3dd3a4739eb663e1011961ce1db37b62f9bbdeb3ea69799c7c58637c9a4",
                          "typeString": "literal_string \"only owner or self\""
                        }
                      ],
                      "id": 59336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1820:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:83:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59352,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:83:119"
                },
                {
                  "id": 59353,
                  "nodeType": "PlaceholderStatement",
                  "src": "1913:1:119"
                }
              ]
            },
            "documentation": {
              "id": 59334,
              "nodeType": "StructuredDocumentation",
              "src": "1715:67:119",
              "text": "@notice Modifier to allow only the owner or the contract itself"
            },
            "name": "ownerOrSelf",
            "nameLocation": "1796:11:119",
            "parameters": {
              "id": 59335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:2:119"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59390,
            "nodeType": "FunctionDefinition",
            "src": "1983:261:119",
            "nodes": [],
            "body": {
              "id": 59389,
              "nodeType": "Block",
              "src": "2016:228:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59361,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59291,
                      "src": "2026:4:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59362,
                      "name": "wethAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59358,
                      "src": "2033:11:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2026:18:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59364,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:18:119"
                },
                {
                  "expression": {
                    "id": 59372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59365,
                      "name": "subjectTemplates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59295,
                      "src": "2107:16:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 59370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2141:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 59369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2126:14:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "baseType": {
                              "id": 59366,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2130:6:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "id": 59367,
                            "nodeType": "ArrayTypeName",
                            "src": "2130:8:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                              "typeString": "string[]"
                            }
                          },
                          "id": 59368,
                          "nodeType": "ArrayTypeName",
                          "src": "2130:10:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage_ptr",
                            "typeString": "string[][]"
                          }
                        }
                      },
                      "id": 59371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2126:17:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory[] memory"
                      }
                    },
                    "src": "2107:36:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref[] storage ref"
                    }
                  },
                  "id": 59373,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:36:119"
                },
                {
                  "expression": {
                    "id": 59379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59374,
                        "name": "subjectTemplates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59295,
                        "src": "2153:16:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref[] storage ref"
                        }
                      },
                      "id": 59376,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 59375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2170:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2153:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "hexValue": "",
                          "id": 59377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2176:2:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "id": 59378,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2175:4:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$1_memory_ptr",
                        "typeString": "string memory[1] memory"
                      }
                    },
                    "src": "2153:26:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 59380,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:26:119"
                },
                {
                  "expression": {
                    "id": 59387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59381,
                        "name": "subjectTemplates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59295,
                        "src": "2189:16:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref[] storage ref"
                        }
                      },
                      "id": 59383,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 59382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2206:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2189:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "hexValue": "7b75696e743235367d",
                          "id": 59384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2212:11:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2131d441782f932636e0c0cd9b515a1a881a12079a7b82c4aea5a279152f34ea",
                            "typeString": "literal_string \"{uint256}\""
                          },
                          "value": "{uint256}"
                        },
                        {
                          "hexValue": "7b75696e743235367d",
                          "id": 59385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2225:11:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2131d441782f932636e0c0cd9b515a1a881a12079a7b82c4aea5a279152f34ea",
                            "typeString": "literal_string \"{uint256}\""
                          },
                          "value": "{uint256}"
                        }
                      ],
                      "id": 59386,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2211:26:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                        "typeString": "string memory[2] memory"
                      }
                    },
                    "src": "2189:48:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 59388,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:48:119"
                }
              ]
            },
            "documentation": {
              "id": 59356,
              "nodeType": "StructuredDocumentation",
              "src": "1927:51:119",
              "text": "@param wethAddress Address of the WETH contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59358,
                  "mutability": "mutable",
                  "name": "wethAddress",
                  "nameLocation": "2003:11:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59390,
                  "src": "1995:19:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1994:21:119"
            },
            "returnParameters": {
              "id": 59360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2016:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59400,
            "nodeType": "FunctionDefinition",
            "src": "2290:74:119",
            "nodes": [],
            "body": {
              "id": 59399,
              "nodeType": "Block",
              "src": "2331:33:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59396,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2341:14:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2341:16:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59398,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:16:119"
                }
              ]
            },
            "documentation": {
              "id": 59391,
              "nodeType": "StructuredDocumentation",
              "src": "2250:35:119",
              "text": "@notice Initialize the contract"
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59393,
                  "name": "initializer",
                  "nameLocations": [
                    "2319:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "2319:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "2319:11:119"
              }
            ],
            "name": "initialize",
            "nameLocation": "2299:10:119",
            "parameters": {
              "id": 59392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2309:2:119"
            },
            "returnParameters": {
              "id": 59395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2331:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59429,
            "nodeType": "FunctionDefinition",
            "src": "2583:303:119",
            "nodes": [],
            "body": {
              "id": 59428,
              "nodeType": "Block",
              "src": "2673:213:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59413,
                    59415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59413,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2689:7:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 59428,
                      "src": "2684:12:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59412,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2684:4:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59415,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2711:6:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 59428,
                      "src": "2698:19:119",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 59414,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2698:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59422,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59420,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59407,
                        "src": "2747:4:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 59416,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59403,
                          "src": "2721:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2728:4:119",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2721:11:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 59419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 59418,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59405,
                          "src": "2740:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2721:25:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 59421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:31:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2683:69:119"
                },
                {
                  "condition": {
                    "id": 59424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2767:8:119",
                    "subExpression": {
                      "id": 59423,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59413,
                      "src": "2768:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59427,
                  "nodeType": "IfStatement",
                  "src": "2763:117:119",
                  "trueBody": {
                    "id": 59426,
                    "nodeType": "Block",
                    "src": "2777:103:119",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2800:70:119",
                          "nodeType": "YulBlock",
                          "src": "2800:70:119",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "result",
                                        "nativeSrc": "2829:6:119",
                                        "nodeType": "YulIdentifier",
                                        "src": "2829:6:119"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2837:2:119",
                                        "nodeType": "YulLiteral",
                                        "src": "2837:2:119",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2825:3:119",
                                      "nodeType": "YulIdentifier",
                                      "src": "2825:3:119"
                                    },
                                    "nativeSrc": "2825:15:119",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2825:15:119"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "result",
                                        "nativeSrc": "2848:6:119",
                                        "nodeType": "YulIdentifier",
                                        "src": "2848:6:119"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "2842:5:119",
                                      "nodeType": "YulIdentifier",
                                      "src": "2842:5:119"
                                    },
                                    "nativeSrc": "2842:13:119",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2842:13:119"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "2818:6:119",
                                  "nodeType": "YulIdentifier",
                                  "src": "2818:6:119"
                                },
                                "nativeSrc": "2818:38:119",
                                "nodeType": "YulFunctionCall",
                                "src": "2818:38:119"
                              },
                              "nativeSrc": "2818:38:119",
                              "nodeType": "YulExpressionStatement",
                              "src": "2818:38:119"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 59415,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2829:6:119",
                            "valueSize": 1
                          },
                          {
                            "declaration": 59415,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2848:6:119",
                            "valueSize": 1
                          }
                        ],
                        "id": 59425,
                        "nodeType": "InlineAssembly",
                        "src": "2791:79:119"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 59401,
              "nodeType": "StructuredDocumentation",
              "src": "2370:208:119",
              "text": "@notice Execute a function on an external contract\n @param target Address of the contract to call\n @param value Amount of ETH to send\n @param data Encoded data of the function to call"
            },
            "functionSelector": "b61d27f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59409,
                  "name": "ownerOrSelf",
                  "nameLocations": [
                    "2661:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59355,
                  "src": "2661:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "2661:11:119"
              }
            ],
            "name": "execute",
            "nameLocation": "2592:7:119",
            "parameters": {
              "id": 59408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59403,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2608:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59429,
                  "src": "2600:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59405,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2624:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59429,
                  "src": "2616:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59407,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2646:4:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59429,
                  "src": "2631:19:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 59406,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2599:52:119"
            },
            "returnParameters": {
              "id": 59411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2673:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59453,
            "nodeType": "FunctionDefinition",
            "src": "2975:195:119",
            "nodes": [],
            "body": {
              "id": 59452,
              "nodeType": "Block",
              "src": "3020:150:119",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59436,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59436,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3036:7:119",
                      "nodeType": "VariableDeclaration",
                      "scope": 59452,
                      "src": "3031:12:119",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59435,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3031:4:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 59446,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6465706f7369742829",
                            "id": 59443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3098:11:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
                              "typeString": "literal_string \"deposit()\""
                            },
                            "value": "deposit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
                              "typeString": "literal_string \"deposit()\""
                            }
                          ],
                          "expression": {
                            "id": 59441,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3074:3:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 59442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3078:19:119",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3074:23:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 59444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3074:36:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 59437,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59291,
                          "src": "3049:4:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3054:4:119",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3049:9:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 59440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 59439,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59432,
                          "src": "3066:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3049:24:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 59445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3049:62:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3030:81:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59448,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59436,
                        "src": "3129:7:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e7665727420746f2077657468206661696c6564",
                        "id": 59449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3138:24:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6fc7eb51fefae256f870b1891c9a27d31b7441095b881ce01d4cc0bf41a0753",
                          "typeString": "literal_string \"convert to weth failed\""
                        },
                        "value": "convert to weth failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6fc7eb51fefae256f870b1891c9a27d31b7441095b881ce01d4cc0bf41a0753",
                          "typeString": "literal_string \"convert to weth failed\""
                        }
                      ],
                      "id": 59447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3121:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:42:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59451,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:42:119"
                }
              ]
            },
            "documentation": {
              "id": 59430,
              "nodeType": "StructuredDocumentation",
              "src": "2892:78:119",
              "text": "@notice Convert ETH to WETH\n @param amount Amount of ETH to convert"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ethToWeth",
            "nameLocation": "2984:10:119",
            "parameters": {
              "id": 59433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59432,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3003:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59453,
                  "src": "2995:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2994:16:119"
            },
            "returnParameters": {
              "id": 59434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3020:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59463,
            "nodeType": "FunctionDefinition",
            "src": "3299:86:119",
            "nodes": [],
            "body": {
              "id": 59462,
              "nodeType": "Block",
              "src": "3383:2:119",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              646
            ],
            "documentation": {
              "id": 59454,
              "nodeType": "StructuredDocumentation",
              "src": "3176:118:119",
              "text": "@notice Upgrade the implementation of the proxy\n @param newImplementation Address of the new implementation"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59459,
                  "name": "ownerOrSelf",
                  "nameLocations": [
                    "3371:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59355,
                  "src": "3371:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "3371:11:119"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "3308:17:119",
            "overrides": {
              "id": 59458,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3362:8:119"
            },
            "parameters": {
              "id": 59457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59456,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3334:17:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59463,
                  "src": "3326:25:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3325:27:119"
            },
            "returnParameters": {
              "id": 59461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3383:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59478,
            "nodeType": "FunctionDefinition",
            "src": "3442:125:119",
            "nodes": [],
            "body": {
              "id": 59477,
              "nodeType": "Block",
              "src": "3509:58:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59471,
                        "name": "guardingWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59301,
                        "src": "3519:14:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 59473,
                      "indexExpression": {
                        "id": 59472,
                        "name": "guardianAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59466,
                        "src": "3534:12:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3519:28:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59474,
                      "name": "walletAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59468,
                      "src": "3550:10:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3519:41:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59476,
                  "nodeType": "ExpressionStatement",
                  "src": "3519:41:119"
                }
              ]
            },
            "documentation": {
              "id": 59464,
              "nodeType": "StructuredDocumentation",
              "src": "3391:46:119",
              "text": "@notice Set guarding wallet for a guardian"
            },
            "functionSelector": "227773ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGuard",
            "nameLocation": "3451:8:119",
            "parameters": {
              "id": 59469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59466,
                  "mutability": "mutable",
                  "name": "guardianAddr",
                  "nameLocation": "3468:12:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59478,
                  "src": "3460:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3460:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59468,
                  "mutability": "mutable",
                  "name": "walletAddr",
                  "nameLocation": "3490:10:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59478,
                  "src": "3482:18:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3459:42:119"
            },
            "returnParameters": {
              "id": 59470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3509:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59539,
            "nodeType": "FunctionDefinition",
            "src": "3606:690:119",
            "nodes": [],
            "body": {
              "id": 59538,
              "nodeType": "Block",
              "src": "3772:524:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59491,
                    "name": "emailNullifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59488,
                    "src": "3782:14:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 59492,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:14:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 59496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 59494,
                          "name": "templateIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59481,
                          "src": "3814:13:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 59495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3831:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3814:18:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642074656d706c61746520696e646578",
                        "id": 59497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3834:24:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65093e1c519286b9711cc89fd036b2e05d6ef0361d89e3dc45e26f73d72d6d6a",
                          "typeString": "literal_string \"invalid template index\""
                        },
                        "value": "invalid template index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65093e1c519286b9711cc89fd036b2e05d6ef0361d89e3dc45e26f73d72d6d6a",
                          "typeString": "literal_string \"invalid template index\""
                        }
                      ],
                      "id": 59493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3806:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3806:53:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59499,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:53:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 59501,
                            "name": "guardingWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59301,
                            "src": "3877:14:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 59503,
                          "indexExpression": {
                            "id": 59502,
                            "name": "guardianAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59486,
                            "src": "3892:12:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3877:28:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 59506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3917:1:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 59505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3909:7:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 59504,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3909:7:119",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3909:10:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3877:42:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420677561726469616e",
                        "id": 59509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:18:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c24eadac953925e32d3c8fdd16d0f07e76264cfdff7f60257334af3d38f1eae7",
                          "typeString": "literal_string \"invalid guardian\""
                        },
                        "value": "invalid guardian"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c24eadac953925e32d3c8fdd16d0f07e76264cfdff7f60257334af3d38f1eae7",
                          "typeString": "literal_string \"invalid guardian\""
                        }
                      ],
                      "id": 59500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3869:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3869:71:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59511,
                  "nodeType": "ExpressionStatement",
                  "src": "3869:71:119"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 59514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59512,
                      "name": "templateIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59481,
                      "src": "3953:13:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 59513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3970:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3953:18:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 59526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 59524,
                        "name": "templateIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59481,
                        "src": "4126:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 59525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4143:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4126:18:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 59536,
                    "nodeType": "IfStatement",
                    "src": "4123:167:119",
                    "trueBody": {
                      "id": 59535,
                      "nodeType": "Block",
                      "src": "4146:144:119",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 59531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 59528,
                                    "name": "subjectParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59484,
                                    "src": "4168:13:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "bytes memory[] memory"
                                    }
                                  },
                                  "id": 59529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4182:6:119",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4168:20:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 59530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4192:1:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "4168:25:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "696e76616c6964207375626a65637420706172616d73",
                                "id": 59532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4195:24:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9db9b288041321436a0af53323fa93c3c8ffe31d3421264e67b37243d43dd764",
                                  "typeString": "literal_string \"invalid subject params\""
                                },
                                "value": "invalid subject params"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9db9b288041321436a0af53323fa93c3c8ffe31d3421264e67b37243d43dd764",
                                  "typeString": "literal_string \"invalid subject params\""
                                }
                              ],
                              "id": 59527,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4160:7:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 59533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4160:60:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 59534,
                          "nodeType": "ExpressionStatement",
                          "src": "4160:60:119"
                        }
                      ]
                    }
                  },
                  "id": 59537,
                  "nodeType": "IfStatement",
                  "src": "3950:340:119",
                  "trueBody": {
                    "id": 59523,
                    "nodeType": "Block",
                    "src": "3973:144:119",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 59519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 59516,
                                  "name": "subjectParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59484,
                                  "src": "3995:13:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 59517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4009:6:119",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3995:20:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 59518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4019:1:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3995:25:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c6964207375626a65637420706172616d73",
                              "id": 59520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4022:24:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9db9b288041321436a0af53323fa93c3c8ffe31d3421264e67b37243d43dd764",
                                "typeString": "literal_string \"invalid subject params\""
                              },
                              "value": "invalid subject params"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9db9b288041321436a0af53323fa93c3c8ffe31d3421264e67b37243d43dd764",
                                "typeString": "literal_string \"invalid subject params\""
                              }
                            ],
                            "id": 59515,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3987:7:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 59521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3987:60:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59522,
                        "nodeType": "ExpressionStatement",
                        "src": "3987:60:119"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 59479,
              "nodeType": "StructuredDocumentation",
              "src": "3573:28:119",
              "text": "@notice account recovery"
            },
            "functionSelector": "adea0a53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recover",
            "nameLocation": "3615:7:119",
            "parameters": {
              "id": 59489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59481,
                  "mutability": "mutable",
                  "name": "templateIndex",
                  "nameLocation": "3638:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59539,
                  "src": "3632:19:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 59480,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3632:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59484,
                  "mutability": "mutable",
                  "name": "subjectParams",
                  "nameLocation": "3677:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59539,
                  "src": "3662:28:119",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59482,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3662:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 59483,
                    "nodeType": "ArrayTypeName",
                    "src": "3662:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59486,
                  "mutability": "mutable",
                  "name": "guardianAddr",
                  "nameLocation": "3709:12:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59539,
                  "src": "3701:20:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3701:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59488,
                  "mutability": "mutable",
                  "name": "emailNullifier",
                  "nameLocation": "3740:14:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59539,
                  "src": "3732:22:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59487,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:133:119"
            },
            "returnParameters": {
              "id": 59490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3772:0:119"
            },
            "scope": 59552,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59551,
            "nodeType": "FunctionDefinition",
            "src": "4302:119:119",
            "nodes": [],
            "body": {
              "id": 59550,
              "nodeType": "Block",
              "src": "4374:47:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59546,
                      "name": "dkimRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59297,
                      "src": "4384:12:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59547,
                      "name": "newDKIMRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59541,
                      "src": "4399:15:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4384:30:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59549,
                  "nodeType": "ExpressionStatement",
                  "src": "4384:30:119"
                }
              ]
            },
            "functionSelector": "a500125c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59544,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59543,
                  "name": "ownerOrSelf",
                  "nameLocations": [
                    "4362:11:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59355,
                  "src": "4362:11:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "4362:11:119"
              }
            ],
            "name": "updateDKIMRegistry",
            "nameLocation": "4311:18:119",
            "parameters": {
              "id": 59542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59541,
                  "mutability": "mutable",
                  "name": "newDKIMRegistry",
                  "nameLocation": "4338:15:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 59551,
                  "src": "4330:23:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4330:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4329:25:119"
            },
            "returnParameters": {
              "id": 59545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4374:0:119"
            },
            "scope": 59552,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59284,
              "name": "TokenCallbackHandler",
              "nameLocations": [
                "752:20:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4145,
              "src": "752:20:119"
            },
            "id": 59285,
            "nodeType": "InheritanceSpecifier",
            "src": "752:20:119"
          },
          {
            "baseName": {
              "id": 59286,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "774:18:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131,
              "src": "774:18:119"
            },
            "id": 59287,
            "nodeType": "InheritanceSpecifier",
            "src": "774:18:119"
          },
          {
            "baseName": {
              "id": 59288,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "794:15:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 647,
              "src": "794:15:119"
            },
            "id": 59289,
            "nodeType": "InheritanceSpecifier",
            "src": "794:15:119"
          }
        ],
        "canonicalName": "Wallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59283,
          "nodeType": "StructuredDocumentation",
          "src": "402:331:119",
          "text": "@title EmailWallet\n @notice Simple Wallet contract to be used as the EmailWallet for users\n @notice This wallet can `execute` any function on any contract provided calle is `owner`\n @notice The deployed is the `owner` by default (EmailWalletCore)\n @dev External contracts should use `call` to deposit ETH if needed"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59552,
          647,
          68347,
          100972,
          68409,
          131,
          67691,
          300,
          4145,
          753,
          2885,
          1928,
          1948
        ],
        "name": "Wallet",
        "nameLocation": "742:6:119",
        "scope": 59553,
        "usedErrors": [],
        "usedEvents": [
          16,
          146,
          100959,
          100966,
          100971
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 119
}