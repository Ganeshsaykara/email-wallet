{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523060805234801561001457600080fd5b50604051611ca9380380611ca983398101604081905261003391610044565b6001600160a01b031660a052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160a051611be76100c26000396000818160f20152818161013a015261042d01526000818161060b015281816106bb01528181610810015281816108c00152610a050152611be76000f3fe6080604052600436106100d55760003560e01c8063715018a61161007f578063b61d27f611610059578063b61d27f6146102ed578063bc197c811461030d578063f23a6e6114610355578063f2fde38b1461039b57610122565b8063715018a61461028e5780638129fc1c146102a35780638da5cb5b146102b857610122565b80633659cfe6116100b05780633659cfe6146102385780634f1ef2861461025857806352d1902d1461026b57610122565b806223de291461016857806301ffc9a71461018d578063150b7a02146101c257610122565b36610122573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461012057610120346103bb565b005b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461012057610120346103bb565b34801561017457600080fd5b50610120610183366004611699565b5050505050505050565b34801561019957600080fd5b506101ad6101a8366004611744565b61050f565b60405190151581526020015b60405180910390f35b3480156101ce57600080fd5b506102076101dd366004611786565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101b9565b34801561024457600080fd5b506101206102533660046117f5565b6105f4565b61012061026636600461183f565b6107f9565b34801561027757600080fd5b506102806109eb565b6040519081526020016101b9565b34801561029a57600080fd5b50610120610ad7565b3480156102af57600080fd5b50610120610aeb565b3480156102c457600080fd5b5060335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b9565b3480156102f957600080fd5b5061012061030836600461191f565b610c7c565b34801561031957600080fd5b506102076103283660046119be565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561036157600080fd5b50610207610370366004611a58565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b3480156103a757600080fd5b506101206103b63660046117f5565b610d8e565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd0e30db000000000000000000000000000000000000000000000000000000000179052905160009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691849161045991611af4565b60006040518083038185875af1925050503d8060008114610496576040519150601f19603f3d011682016040523d82523d6000602084013e61049b565b606091505b505090508061050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f636f6e7665727420746f2077657468206661696c65640000000000000000000060448201526064015b60405180910390fd5b5050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806105a257507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105ee57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610502565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661072e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610502565b6107da81610e42565b604080516000808252602082019092526107f691839190610ecd565b50565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036108be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610502565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109337f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610502565b6109df82610e42565b61050b82826001610ecd565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ab2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610502565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610adf6110d1565b610ae96000611152565b565b600054610100900460ff1615808015610b0b5750600054600160ff909116105b80610b255750303b158015610b25575060005460ff166001145b610bb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610502565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610c0f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610c176111c9565b80156107f657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60335473ffffffffffffffffffffffffffffffffffffffff16331480610ca157503330145b610d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c6600000000000000000000000000006044820152606401610502565b6000808573ffffffffffffffffffffffffffffffffffffffff16858585604051610d32929190611b10565b60006040518083038185875af1925050503d8060008114610d6f576040519150601f19603f3d011682016040523d82523d6000602084013e610d74565b606091505b509150915081610d8657805160208201fd5b505050505050565b610d966110d1565b73ffffffffffffffffffffffffffffffffffffffff8116610e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610502565b6107f681611152565b60335473ffffffffffffffffffffffffffffffffffffffff16331480610e6757503330145b6107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c6600000000000000000000000000006044820152606401610502565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f0557610f0083611268565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f8a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610f8791810190611b20565b60015b611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610502565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146110c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610502565b50610f00838383611372565b60335473ffffffffffffffffffffffffffffffffffffffff163314610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610502565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610502565b610ae961139d565b73ffffffffffffffffffffffffffffffffffffffff81163b61130c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610502565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61137b8361143d565b6000825111806113885750805b15610f0057611397838361148a565b50505050565b600054610100900460ff16611434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610502565b610ae933611152565b61144681611268565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114af8383604051806060016040528060278152602001611b8b602791396114b6565b9392505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516114e09190611af4565b600060405180830381855af49150503d806000811461151b576040519150601f19603f3d011682016040523d82523d6000602084013e611520565b606091505b50915091506115318683838761153b565b9695505050505050565b606083156115d15782516000036115ca5773ffffffffffffffffffffffffffffffffffffffff85163b6115ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610502565b50816115db565b6115db83836115e3565b949350505050565b8151156115f35781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105029190611b39565b803573ffffffffffffffffffffffffffffffffffffffff8116811461164b57600080fd5b919050565b60008083601f84011261166257600080fd5b50813567ffffffffffffffff81111561167a57600080fd5b60208301915083602082850101111561169257600080fd5b9250929050565b60008060008060008060008060c0898b0312156116b557600080fd5b6116be89611627565b97506116cc60208a01611627565b96506116da60408a01611627565b955060608901359450608089013567ffffffffffffffff808211156116fe57600080fd5b61170a8c838d01611650565b909650945060a08b013591508082111561172357600080fd5b506117308b828c01611650565b999c989b5096995094979396929594505050565b60006020828403121561175657600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146114af57600080fd5b60008060008060006080868803121561179e57600080fd5b6117a786611627565b94506117b560208701611627565b935060408601359250606086013567ffffffffffffffff8111156117d857600080fd5b6117e488828901611650565b969995985093965092949392505050565b60006020828403121561180757600080fd5b6114af82611627565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561185257600080fd5b61185b83611627565b9150602083013567ffffffffffffffff8082111561187857600080fd5b818501915085601f83011261188c57600080fd5b81358181111561189e5761189e611810565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156118e4576118e4611810565b816040528281528860208487010111156118fd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806060858703121561193557600080fd5b61193e85611627565b935060208501359250604085013567ffffffffffffffff81111561196157600080fd5b61196d87828801611650565b95989497509550505050565b60008083601f84011261198b57600080fd5b50813567ffffffffffffffff8111156119a357600080fd5b6020830191508360208260051b850101111561169257600080fd5b60008060008060008060008060a0898b0312156119da57600080fd5b6119e389611627565b97506119f160208a01611627565b9650604089013567ffffffffffffffff80821115611a0e57600080fd5b611a1a8c838d01611979565b909850965060608b0135915080821115611a3357600080fd5b611a3f8c838d01611979565b909650945060808b013591508082111561172357600080fd5b60008060008060008060a08789031215611a7157600080fd5b611a7a87611627565b9550611a8860208801611627565b94506040870135935060608701359250608087013567ffffffffffffffff811115611ab257600080fd5b611abe89828a01611650565b979a9699509497509295939492505050565b60005b83811015611aeb578181015183820152602001611ad3565b50506000910152565b60008251611b06818460208701611ad0565b9190910192915050565b8183823760009101908152919050565b600060208284031215611b3257600080fd5b5051919050565b6020815260008251806020840152611b58816040850160208701611ad0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201f42c8d4a590a404149cc596615408241ebce383b4a9009795959ecba9ff957464736f6c63430008150033",
    "sourceMap": "733:2277:134:-:0;;;1088:4:12;1045:48;;1799:68:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1842:18:134;;;733:2277;;14:290:188;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:188;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:188:o;:::-;733:2277:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100d55760003560e01c8063715018a61161007f578063b61d27f611610059578063b61d27f6146102ed578063bc197c811461030d578063f23a6e6114610355578063f2fde38b1461039b57610122565b8063715018a61461028e5780638129fc1c146102a35780638da5cb5b146102b857610122565b80633659cfe6116100b05780633659cfe6146102385780634f1ef2861461025857806352d1902d1461026b57610122565b806223de291461016857806301ffc9a71461018d578063150b7a02146101c257610122565b36610122573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461012057610120346103bb565b005b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461012057610120346103bb565b34801561017457600080fd5b50610120610183366004611699565b5050505050505050565b34801561019957600080fd5b506101ad6101a8366004611744565b61050f565b60405190151581526020015b60405180910390f35b3480156101ce57600080fd5b506102076101dd366004611786565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101b9565b34801561024457600080fd5b506101206102533660046117f5565b6105f4565b61012061026636600461183f565b6107f9565b34801561027757600080fd5b506102806109eb565b6040519081526020016101b9565b34801561029a57600080fd5b50610120610ad7565b3480156102af57600080fd5b50610120610aeb565b3480156102c457600080fd5b5060335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b9565b3480156102f957600080fd5b5061012061030836600461191f565b610c7c565b34801561031957600080fd5b506102076103283660046119be565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561036157600080fd5b50610207610370366004611a58565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b3480156103a757600080fd5b506101206103b63660046117f5565b610d8e565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd0e30db000000000000000000000000000000000000000000000000000000000179052905160009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691849161045991611af4565b60006040518083038185875af1925050503d8060008114610496576040519150601f19603f3d011682016040523d82523d6000602084013e61049b565b606091505b505090508061050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f636f6e7665727420746f2077657468206661696c65640000000000000000000060448201526064015b60405180910390fd5b5050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806105a257507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806105ee57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610502565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661072e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610502565b6107da81610e42565b604080516000808252602082019092526107f691839190610ecd565b50565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036108be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610502565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109337f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146109d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610502565b6109df82610e42565b61050b82826001610ecd565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ab2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610502565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b610adf6110d1565b610ae96000611152565b565b600054610100900460ff1615808015610b0b5750600054600160ff909116105b80610b255750303b158015610b25575060005460ff166001145b610bb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610502565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610c0f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610c176111c9565b80156107f657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b60335473ffffffffffffffffffffffffffffffffffffffff16331480610ca157503330145b610d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c6600000000000000000000000000006044820152606401610502565b6000808573ffffffffffffffffffffffffffffffffffffffff16858585604051610d32929190611b10565b60006040518083038185875af1925050503d8060008114610d6f576040519150601f19603f3d011682016040523d82523d6000602084013e610d74565b606091505b509150915081610d8657805160208201fd5b505050505050565b610d966110d1565b73ffffffffffffffffffffffffffffffffffffffff8116610e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610502565b6107f681611152565b60335473ffffffffffffffffffffffffffffffffffffffff16331480610e6757503330145b6107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f6e6c79206f776e6572206f722073656c6600000000000000000000000000006044820152606401610502565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f0557610f0083611268565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f8a575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610f8791810190611b20565b60015b611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610502565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146110c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610502565b50610f00838383611372565b60335473ffffffffffffffffffffffffffffffffffffffff163314610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610502565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610502565b610ae961139d565b73ffffffffffffffffffffffffffffffffffffffff81163b61130c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610502565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61137b8361143d565b6000825111806113885750805b15610f0057611397838361148a565b50505050565b600054610100900460ff16611434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610502565b610ae933611152565b61144681611268565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114af8383604051806060016040528060278152602001611b8b602791396114b6565b9392505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516114e09190611af4565b600060405180830381855af49150503d806000811461151b576040519150601f19603f3d011682016040523d82523d6000602084013e611520565b606091505b50915091506115318683838761153b565b9695505050505050565b606083156115d15782516000036115ca5773ffffffffffffffffffffffffffffffffffffffff85163b6115ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610502565b50816115db565b6115db83836115e3565b949350505050565b8151156115f35781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105029190611b39565b803573ffffffffffffffffffffffffffffffffffffffff8116811461164b57600080fd5b919050565b60008083601f84011261166257600080fd5b50813567ffffffffffffffff81111561167a57600080fd5b60208301915083602082850101111561169257600080fd5b9250929050565b60008060008060008060008060c0898b0312156116b557600080fd5b6116be89611627565b97506116cc60208a01611627565b96506116da60408a01611627565b955060608901359450608089013567ffffffffffffffff808211156116fe57600080fd5b61170a8c838d01611650565b909650945060a08b013591508082111561172357600080fd5b506117308b828c01611650565b999c989b5096995094979396929594505050565b60006020828403121561175657600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146114af57600080fd5b60008060008060006080868803121561179e57600080fd5b6117a786611627565b94506117b560208701611627565b935060408601359250606086013567ffffffffffffffff8111156117d857600080fd5b6117e488828901611650565b969995985093965092949392505050565b60006020828403121561180757600080fd5b6114af82611627565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561185257600080fd5b61185b83611627565b9150602083013567ffffffffffffffff8082111561187857600080fd5b818501915085601f83011261188c57600080fd5b81358181111561189e5761189e611810565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156118e4576118e4611810565b816040528281528860208487010111156118fd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806060858703121561193557600080fd5b61193e85611627565b935060208501359250604085013567ffffffffffffffff81111561196157600080fd5b61196d87828801611650565b95989497509550505050565b60008083601f84011261198b57600080fd5b50813567ffffffffffffffff8111156119a357600080fd5b6020830191508360208260051b850101111561169257600080fd5b60008060008060008060008060a0898b0312156119da57600080fd5b6119e389611627565b97506119f160208a01611627565b9650604089013567ffffffffffffffff80821115611a0e57600080fd5b611a1a8c838d01611979565b909850965060608b0135915080821115611a3357600080fd5b611a3f8c838d01611979565b909650945060808b013591508082111561172357600080fd5b60008060008060008060a08789031215611a7157600080fd5b611a7a87611627565b9550611a8860208801611627565b94506040870135935060608701359250608087013567ffffffffffffffff811115611ab257600080fd5b611abe89828a01611650565b979a9699509497509295939492505050565b60005b83811015611aeb578181015183820152602001611ad3565b50506000910152565b60008251611b06818460208701611ad0565b9190910192915050565b8183823760009101908152919050565b600060208284031215611b3257600080fd5b5051919050565b6020815260008251806020840152611b58816040850160208701611ad0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201f42c8d4a590a404149cc596615408241ebce383b4a9009795959ecba9ff957464736f6c63430008150033",
    "sourceMap": "733:2277:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:10;:18;1467:4;1453:18;;1449:70;;1487:21;1498:9;1487:10;:21::i;:::-;733:2277;;1115:10;:18;1129:4;1115:18;;1111:70;;1149:21;1160:9;1149:10;:21::i;581:176:50:-;;;;;;;;;;-1:-1:-1;581:176:50;;;;;:::i;:::-;;;;;;;;;;1489:298;;;;;;;;;;-1:-1:-1;1489:298:50;;;;;:::i;:::-;;:::i;:::-;;;2084:14:188;;2077:22;2059:41;;2047:2;2032:18;1489:298:50;;;;;;;;763:212;;;;;;;;;;-1:-1:-1;763:212:50;;;;;:::i;:::-;927:41;763:212;;;;;;;;;;;2916:66:188;2904:79;;;2886:98;;2874:2;2859:18;763:212:50;2742:248:188;3143:195:12;;;;;;;;;;-1:-1:-1;3143:195:12;;;;;:::i;:::-;;:::i;3657:220::-;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;:::-;;;4580:25:188;;;4568:2;4553:18;2762:131:12;4434:177:188;2064:101:0;;;;;;;;;;;;;:::i;1913:74:134:-;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;1441:85;;1513:6;;;;4762:74:188;;4750:2;4735:18;1441:85:0;4616:226:188;2206:303:134;;;;;;;;;;-1:-1:-1;2206:303:134;;;;;:::i;:::-;;:::i;1219:264:50:-;;;;;;;;;;-1:-1:-1;1219:264:50;;;;;:::i;:::-;1428:48;1219:264;;;;;;;;;;;981:232;;;;;;;;;;-1:-1:-1;981:232:50;;;;;:::i;:::-;1163:43;981:232;;;;;;;;;2314:198:0;;;;;;;;;;-1:-1:-1;2314:198:0;;;;;:::i;:::-;;:::i;2598:195:134:-;2697:36;;;;;;;;;;;;;;;;;;;;;;2672:62;;2654:12;;2672:9;:4;:9;;2689:6;;2672:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2653:81;;;2752:7;2744:42;;;;;;;8439:2:188;2744:42:134;;;8421:21:188;8478:2;8458:18;;;8451:30;8517:24;8497:18;;;8490:52;8559:18;;2744:42:134;;;;;;;;;2643:150;2598:195;:::o;1489:298:50:-;1576:4;1611:48;;;1626:33;1611:48;;:113;;-1:-1:-1;1675:49:50;;;1690:34;1675:49;1611:113;:169;;;-1:-1:-1;1740:40:50;;;1755:25;1740:40;1611:169;1592:188;1489:298;-1:-1:-1;;1489:298:50:o;3143:195:12:-;1637:23;1654:6;1637:23;1645:4;1637:23;1629:80;;;;;;;8790:2:188;1629:80:12;;;8772:21:188;8829:2;8809:18;;;8802:30;8868:34;8848:18;;;8841:62;8939:14;8919:18;;;8912:42;8971:19;;1629:80:12;8588:408:188;1629:80:12;1751:6;1727:30;;:20;1030:66:9;1254:54;;;;1175:140;1727:20:12;:30;;;1719:87;;;;;;;9203:2:188;1719:87:12;;;9185:21:188;9242:2;9222:18;;;9215:30;9281:34;9261:18;;;9254:62;9352:14;9332:18;;;9325:42;9384:19;;1719:87:12;9001:408:188;1719:87:12;3224:36:::1;3242:17;3224;:36::i;:::-;3311:12;::::0;;3321:1:::1;3311:12:::0;;;::::1;::::0;::::1;::::0;;;3270:61:::1;::::0;3292:17;;3311:12;3270:21:::1;:61::i;:::-;3143:195:::0;:::o;3657:220::-;1637:23;1654:6;1637:23;1645:4;1637:23;1629:80;;;;;;;8790:2:188;1629:80:12;;;8772:21:188;8829:2;8809:18;;;8802:30;8868:34;8848:18;;;8841:62;8939:14;8919:18;;;8912:42;8971:19;;1629:80:12;8588:408:188;1629:80:12;1751:6;1727:30;;:20;1030:66:9;1254:54;;;;1175:140;1727:20:12;:30;;;1719:87;;;;;;;9203:2:188;1719:87:12;;;9185:21:188;9242:2;9222:18;;;9215:30;9281:34;9261:18;;;9254:62;9352:14;9332:18;;;9325:42;9384:19;;1719:87:12;9001:408:188;1719:87:12;3772:36:::1;3790:17;3772;:36::i;:::-;3818:52;3840:17;3859:4;3865;3818:21;:52::i;2762:131::-:0;2840:7;2080:4;2072:23;2089:6;2072:23;;2064:92;;;;;;;9616:2:188;2064:92:12;;;9598:21:188;9655:2;9635:18;;;9628:30;9694:34;9674:18;;;9667:62;9765:26;9745:18;;;9738:54;9809:19;;2064:92:12;9414:420:188;2064:92:12;-1:-1:-1;1030:66:9::1;2762:131:12::0;:::o;2064:101:0:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;1913:74:134:-;3279:19:1;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:1;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:1;1713:19:2;:23;;;3387:66:1;;-1:-1:-1;3436:12:1;;;;;:17;3387:66;3325:201;;;;;;;10041:2:188;3325:201:1;;;10023:21:188;10080:2;10060:18;;;10053:30;10119:34;10099:18;;;10092:62;10190:16;10170:18;;;10163:44;10224:19;;3325:201:1;9839:410:188;3325:201:1;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;1964:16:134::1;:14;:16::i;:::-;3651:14:1::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;10406:36:188;;3721:14:1;;10394:2:188;10379:18;3721:14:1;;;;;;;3269:483;1913:74:134:o;2206:303::-;1513:6:0;;;;1644:10:134;:21;;:52;;-1:-1:-1;1669:10:134;1691:4;1669:27;1644:52;1636:83;;;;;;;10655:2:188;1636:83:134;;;10637:21:188;10694:2;10674:18;;;10667:30;10733:20;10713:18;;;10706:48;10771:18;;1636:83:134;10453:342:188;1636:83:134;2307:12:::1;2321:19:::0;2344:6:::1;:11;;2363:5;2370:4;;2344:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2306:69;;;;2391:7;2386:117;;2471:6;2465:13;2460:2;2452:6;2448:15;2441:38;2386:117;2296:213;;2206:303:::0;;;;:::o;2314:198:0:-;1334:13;:11;:13::i;:::-;2402:22:::1;::::0;::::1;2394:73;;;::::0;::::1;::::0;;11278:2:188;2394:73:0::1;::::0;::::1;11260:21:188::0;11317:2;11297:18;;;11290:30;11356:34;11336:18;;;11329:62;11427:8;11407:18;;;11400:36;11453:19;;2394:73:0::1;11076:402:188::0;2394:73:0::1;2477:28;2496:8;2477:18;:28::i;2922:86:134:-:0;1513:6:0;;;;1644:10:134;:21;;:52;;-1:-1:-1;1669:10:134;1691:4;1669:27;1644:52;1636:83;;;;;;;10655:2:188;1636:83:134;;;10637:21:188;10694:2;10674:18;;;10667:30;10733:20;10713:18;;;10706:48;10771:18;;1636:83:134;10453:342:188;2494:922:9;689:66;2910:48;;;2906:504;;;2974:37;2993:17;2974:18;:37::i;:::-;2494:922;;;:::o;2906:504::-;3064:17;3046:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:52:9;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3042:291;;3262:56;;;;;11874:2:188;3262:56:9;;;11856:21:188;11913:2;11893:18;;;11886:30;11952:34;11932:18;;;11925:62;12023:16;12003:18;;;11996:44;12057:19;;3262:56:9;11672:410:188;3042:291:9;1030:66;3148:28;;3140:82;;;;;;;12289:2:188;3140:82:9;;;12271:21:188;12328:2;12308:18;;;12301:30;12367:34;12347:18;;;12340:62;12438:11;12418:18;;;12411:39;12467:19;;3140:82:9;12087:405:188;3140:82:9;3099:138;3346:53;3364:17;3383:4;3389:9;3346:17;:53::i;1599:130:0:-;1513:6;;1662:23;1513:6;929:10:3;1662:23:0;1654:68;;;;;;;12699:2:188;1654:68:0;;;12681:21:188;;;12718:18;;;12711:30;12777:34;12757:18;;;12750:62;12829:18;;1654:68:0;12497:356:188;2666:187:0;2758:6;;;;2774:17;;;;;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:1;;;;;;;5366:69;;;;;;;13060:2:188;5366:69:1;;;13042:21:188;13099:2;13079:18;;;13072:30;13138:34;13118:18;;;13111:62;13209:13;13189:18;;;13182:41;13240:19;;5366:69:1;12858:407:188;5366:69:1;1065:26:0::1;:24;:26::i;1406:259:9:-:0;1713:19:2;;;;1479:95:9;;;;;;;13472:2:188;1479:95:9;;;13454:21:188;13511:2;13491:18;;;13484:30;13550:34;13530:18;;;13523:62;13621:15;13601:18;;;13594:43;13654:19;;1479:95:9;13270:409:188;1479:95:9;1030:66;1584:74;;;;;;;;;;;;;;;1406:259::o;2057:265::-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2057:265;;;:::o;1104:111:0:-;5374:13:1;;;;;;;5366:69;;;;;;;13060:2:188;5366:69:1;;;13042:21:188;13099:2;13079:18;;;13072:30;13138:34;13118:18;;;13111:62;13209:13;13189:18;;;13182:41;13240:19;;5366:69:1;12858:407:188;5366:69:1;1176:32:0::1;929:10:3::0;1176:18:0::1;:32::i;1771:152:9:-:0;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;;;;;;;;;;1771:152;:::o;6674:198:25:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:25:o;7058:325::-;7199:12;7224;7238:23;7265:6;:19;;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:25:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1713:19:2;;;;8113:60:25;;;;;;;13886:2:188;8113:60:25;;;13868:21:188;13925:2;13905:18;;;13898:30;13964:31;13944:18;;;13937:59;14013:18;;8113:60:25;13684:353:188;8113:60:25;-1:-1:-1;8208:10:25;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:196:188:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;266:8;276:6;330:3;323:4;315:6;311:17;307:27;297:55;;348:1;345;338:12;297:55;-1:-1:-1;371:20:188;;414:18;403:30;;400:50;;;446:1;443;436:12;400:50;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:59;;;552:1;549;542:12;497:59;215:347;;;;;:::o;567:1010::-;693:6;701;709;717;725;733;741;749;802:3;790:9;781:7;777:23;773:33;770:53;;;819:1;816;809:12;770:53;842:29;861:9;842:29;:::i;:::-;832:39;;890:38;924:2;913:9;909:18;890:38;:::i;:::-;880:48;;947:38;981:2;970:9;966:18;947:38;:::i;:::-;937:48;;1032:2;1021:9;1017:18;1004:32;994:42;;1087:3;1076:9;1072:19;1059:33;1111:18;1152:2;1144:6;1141:14;1138:34;;;1168:1;1165;1158:12;1138:34;1207:58;1257:7;1248:6;1237:9;1233:22;1207:58;:::i;:::-;1284:8;;-1:-1:-1;1181:84:188;-1:-1:-1;1372:3:188;1357:19;;1344:33;;-1:-1:-1;1389:16:188;;;1386:36;;;1418:1;1415;1408:12;1386:36;;1457:60;1509:7;1498:8;1487:9;1483:24;1457:60;:::i;:::-;567:1010;;;;-1:-1:-1;567:1010:188;;-1:-1:-1;567:1010:188;;;;;;1536:8;-1:-1:-1;;;567:1010:188:o;1582:332::-;1640:6;1693:2;1681:9;1672:7;1668:23;1664:32;1661:52;;;1709:1;1706;1699:12;1661:52;1748:9;1735:23;1798:66;1791:5;1787:78;1780:5;1777:89;1767:117;;1880:1;1877;1870:12;2111:626;2208:6;2216;2224;2232;2240;2293:3;2281:9;2272:7;2268:23;2264:33;2261:53;;;2310:1;2307;2300:12;2261:53;2333:29;2352:9;2333:29;:::i;:::-;2323:39;;2381:38;2415:2;2404:9;2400:18;2381:38;:::i;:::-;2371:48;;2466:2;2455:9;2451:18;2438:32;2428:42;;2521:2;2510:9;2506:18;2493:32;2548:18;2540:6;2537:30;2534:50;;;2580:1;2577;2570:12;2534:50;2619:58;2669:7;2660:6;2649:9;2645:22;2619:58;:::i;:::-;2111:626;;;;-1:-1:-1;2111:626:188;;-1:-1:-1;2696:8:188;;2593:84;2111:626;-1:-1:-1;;;2111:626:188:o;2995:186::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3146:29;3165:9;3146:29;:::i;3186:184::-;3238:77;3235:1;3228:88;3335:4;3332:1;3325:15;3359:4;3356:1;3349:15;3375:1054;3452:6;3460;3513:2;3501:9;3492:7;3488:23;3484:32;3481:52;;;3529:1;3526;3519:12;3481:52;3552:29;3571:9;3552:29;:::i;:::-;3542:39;;3632:2;3621:9;3617:18;3604:32;3655:18;3696:2;3688:6;3685:14;3682:34;;;3712:1;3709;3702:12;3682:34;3750:6;3739:9;3735:22;3725:32;;3795:7;3788:4;3784:2;3780:13;3776:27;3766:55;;3817:1;3814;3807:12;3766:55;3853:2;3840:16;3875:2;3871;3868:10;3865:36;;;3881:18;;:::i;:::-;4015:2;4009:9;4077:4;4069:13;;3920:66;4065:22;;;4089:2;4061:31;4057:40;4045:53;;;4113:18;;;4133:22;;;4110:46;4107:72;;;4159:18;;:::i;:::-;4199:10;4195:2;4188:22;4234:2;4226:6;4219:18;4274:7;4269:2;4264;4260;4256:11;4252:20;4249:33;4246:53;;;4295:1;4292;4285:12;4246:53;4351:2;4346;4342;4338:11;4333:2;4325:6;4321:15;4308:46;4396:1;4391:2;4386;4378:6;4374:15;4370:24;4363:35;4417:6;4407:16;;;;;;;3375:1054;;;;;:::o;4847:551::-;4935:6;4943;4951;4959;5012:2;5000:9;4991:7;4987:23;4983:32;4980:52;;;5028:1;5025;5018:12;4980:52;5051:29;5070:9;5051:29;:::i;:::-;5041:39;;5127:2;5116:9;5112:18;5099:32;5089:42;;5182:2;5171:9;5167:18;5154:32;5209:18;5201:6;5198:30;5195:50;;;5241:1;5238;5231:12;5195:50;5280:58;5330:7;5321:6;5310:9;5306:22;5280:58;:::i;:::-;4847:551;;;;-1:-1:-1;5357:8:188;-1:-1:-1;;;;4847:551:188:o;5403:367::-;5466:8;5476:6;5530:3;5523:4;5515:6;5511:17;5507:27;5497:55;;5548:1;5545;5538:12;5497:55;-1:-1:-1;5571:20:188;;5614:18;5603:30;;5600:50;;;5646:1;5643;5636:12;5600:50;5683:4;5675:6;5671:17;5659:29;;5743:3;5736:4;5726:6;5723:1;5719:14;5711:6;5707:27;5703:38;5700:47;5697:67;;;5760:1;5757;5750:12;5775:1210;5935:6;5943;5951;5959;5967;5975;5983;5991;6044:3;6032:9;6023:7;6019:23;6015:33;6012:53;;;6061:1;6058;6051:12;6012:53;6084:29;6103:9;6084:29;:::i;:::-;6074:39;;6132:38;6166:2;6155:9;6151:18;6132:38;:::i;:::-;6122:48;;6221:2;6210:9;6206:18;6193:32;6244:18;6285:2;6277:6;6274:14;6271:34;;;6301:1;6298;6291:12;6271:34;6340:70;6402:7;6393:6;6382:9;6378:22;6340:70;:::i;:::-;6429:8;;-1:-1:-1;6314:96:188;-1:-1:-1;6517:2:188;6502:18;;6489:32;;-1:-1:-1;6533:16:188;;;6530:36;;;6562:1;6559;6552:12;6530:36;6601:72;6665:7;6654:8;6643:9;6639:24;6601:72;:::i;:::-;6692:8;;-1:-1:-1;6575:98:188;-1:-1:-1;6780:3:188;6765:19;;6752:33;;-1:-1:-1;6797:16:188;;;6794:36;;;6826:1;6823;6816:12;6990:695;7096:6;7104;7112;7120;7128;7136;7189:3;7177:9;7168:7;7164:23;7160:33;7157:53;;;7206:1;7203;7196:12;7157:53;7229:29;7248:9;7229:29;:::i;:::-;7219:39;;7277:38;7311:2;7300:9;7296:18;7277:38;:::i;:::-;7267:48;;7362:2;7351:9;7347:18;7334:32;7324:42;;7413:2;7402:9;7398:18;7385:32;7375:42;;7468:3;7457:9;7453:19;7440:33;7496:18;7488:6;7485:30;7482:50;;;7528:1;7525;7518:12;7482:50;7567:58;7617:7;7608:6;7597:9;7593:22;7567:58;:::i;:::-;6990:695;;;;-1:-1:-1;6990:695:188;;-1:-1:-1;6990:695:188;;7644:8;;6990:695;-1:-1:-1;;;6990:695:188:o;7690:250::-;7775:1;7785:113;7799:6;7796:1;7793:13;7785:113;;;7875:11;;;7869:18;7856:11;;;7849:39;7821:2;7814:10;7785:113;;;-1:-1:-1;;7932:1:188;7914:16;;7907:27;7690:250::o;7945:287::-;8074:3;8112:6;8106:13;8128:66;8187:6;8182:3;8175:4;8167:6;8163:17;8128:66;:::i;:::-;8210:16;;;;;7945:287;-1:-1:-1;;7945:287:188:o;10800:271::-;10983:6;10975;10970:3;10957:33;10939:3;11009:16;;11034:13;;;11009:16;10800:271;-1:-1:-1;10800:271:188:o;11483:184::-;11553:6;11606:2;11594:9;11585:7;11581:23;11577:32;11574:52;;;11622:1;11619;11612:12;11574:52;-1:-1:-1;11645:16:188;;11483:184;-1:-1:-1;11483:184:188:o;14042:455::-;14191:2;14180:9;14173:21;14154:4;14223:6;14217:13;14266:6;14261:2;14250:9;14246:18;14239:34;14282:79;14354:6;14349:2;14338:9;14334:18;14329:2;14321:6;14317:15;14282:79;:::i;:::-;14413:2;14401:15;14418:66;14397:88;14382:104;;;;14488:2;14378:113;;14042:455;-1:-1:-1;;14042:455:188:o",
    "linkReferences": {},
    "immutableReferences": {
      "547": [
        {
          "start": 1547,
          "length": 32
        },
        {
          "start": 1723,
          "length": 32
        },
        {
          "start": 2064,
          "length": 32
        },
        {
          "start": 2240,
          "length": 32
        },
        {
          "start": 2565,
          "length": 32
        }
      ],
      "66107": [
        {
          "start": 242,
          "length": 32
        },
        {
          "start": 314,
          "length": 32
        },
        {
          "start": 1069,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "execute(address,uint256,bytes)": "b61d27f6",
    "initialize()": "8129fc1c",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"External contracts should use `call` to deposit ETH if needed\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"wethAddress\":\"Address of the WETH contract\"}},\"execute(address,uint256,bytes)\":{\"params\":{\"data\":\"Encoded data of the function to call\",\"target\":\"Address of the contract to call\",\"value\":\"Amount of ETH to send\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"EmailWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(address,uint256,bytes)\":{\"notice\":\"Execute a function on an external contract\"},\"initialize()\":{\"notice\":\"Initialize the contract\"}},\"notice\":\"Simple Wallet contract to be used as the EmailWallet for usersThis wallet can `execute` any function on any contract provided calle is `owner`The deployed is the `owner` by default (EmailWalletCore)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@gnosis.pm/=../../node_modules/@gnosis.pm/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@uniswap/=../../node_modules/@uniswap/\",\":@zk-email/=../../node_modules/@zk-email/\",\":accountabstraction/=../../node_modules/accountabstraction/\",\":base64-sol/=../../node_modules/base64-sol/\",\":ds-test/=../../node_modules/ds-test/src/\",\":forge-std/=../../node_modules/forge-std/src/\",\":hardhat-deploy/=../../node_modules/hardhat-deploy/\",\":snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/\",\":solady/=../../node_modules/solady/src/\"]},\"sources\":{\"../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"../../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"../../node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"../../node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"../../node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"../../node_modules/@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"../../node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"../../node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"../../node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"../../node_modules/accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]},\"src/Wallet.sol\":{\"keccak256\":\"0xbdaa97ae03e55b5e33a63734c5e66a8af0e84ab1e78a07de55048c4f015c5db3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22e96e946be8255e700d87c5ce6bdc3d7c8d78b6a8bec924c80acc8cc5f43452\",\"dweb:/ipfs/QmYRtprjqwAQ3PaBUXHcbAF6tS5fQ5r1cY9cL8aB2pMYQ8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "wethAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tokensReceived"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "wethAddress": "Address of the WETH contract"
            }
          },
          "execute(address,uint256,bytes)": {
            "params": {
              "data": "Encoded data of the function to call",
              "target": "Address of the contract to call",
              "value": "Amount of ETH to send"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute(address,uint256,bytes)": {
            "notice": "Execute a function on an external contract"
          },
          "initialize()": {
            "notice": "Initialize the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@gnosis.pm/=../../node_modules/@gnosis.pm/",
        "@openzeppelin/=../../node_modules/@openzeppelin/",
        "@uniswap/=../../node_modules/@uniswap/",
        "@zk-email/=../../node_modules/@zk-email/",
        "accountabstraction/=../../node_modules/accountabstraction/",
        "base64-sol/=../../node_modules/base64-sol/",
        "ds-test/=../../node_modules/ds-test/src/",
        "forge-std/=../../node_modules/forge-std/src/",
        "hardhat-deploy/=../../node_modules/hardhat-deploy/",
        "snarkjs/=../../node_modules/circom-helper/node_modules/snarkjs/",
        "solady/=../../node_modules/solady/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 20000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Wallet.sol": "Wallet"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "../../node_modules/accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752",
        "urls": [
          "bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3",
          "dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB"
        ],
        "license": "GPL-3.0"
      },
      "src/Wallet.sol": {
        "keccak256": "0xbdaa97ae03e55b5e33a63734c5e66a8af0e84ab1e78a07de55048c4f015c5db3",
        "urls": [
          "bzz-raw://22e96e946be8255e700d87c5ce6bdc3d7c8d78b6a8bec924c80acc8cc5f43452",
          "dweb:/ipfs/QmYRtprjqwAQ3PaBUXHcbAF6tS5fQ5r1cY9cL8aB2pMYQ8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "src/Wallet.sol:Wallet",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "src/Wallet.sol:Wallet",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 95620,
        "contract": "src/Wallet.sol:Wallet",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "src/Wallet.sol:Wallet",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "src/Wallet.sol:Wallet",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ast": {
    "absolutePath": "src/Wallet.sol",
    "id": 66247,
    "exportedSymbols": {
      "IERC1155Receiver": [
        753
      ],
      "IERC165": [
        3812
      ],
      "IERC20": [
        1418
      ],
      "IERC721Receiver": [
        2855
      ],
      "IERC777Recipient": [
        2875
      ],
      "OwnableUpgradeable": [
        131
      ],
      "TokenCallbackHandler": [
        5072
      ],
      "UUPSUpgradeable": [
        647
      ],
      "Wallet": [
        66246
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2979:134",
    "nodes": [
      {
        "id": 66091,
        "nodeType": "PragmaDirective",
        "src": "32:24:134",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 66093,
        "nodeType": "ImportDirective",
        "src": "58:88:134",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66247,
        "sourceUnit": 648,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66092,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 647,
              "src": "66:15:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66095,
        "nodeType": "ImportDirective",
        "src": "147:101:134",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66247,
        "sourceUnit": 132,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66094,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131,
              "src": "155:18:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66097,
        "nodeType": "ImportDirective",
        "src": "249:70:134",
        "nodes": [],
        "absolutePath": "../../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66247,
        "sourceUnit": 1419,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66096,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1418,
              "src": "257:6:134",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66098,
        "nodeType": "ImportDirective",
        "src": "320:80:134",
        "nodes": [],
        "absolutePath": "../../node_modules/accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "file": "accountabstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66247,
        "sourceUnit": 5073,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 66246,
        "nodeType": "ContractDefinition",
        "src": "733:2277:134",
        "nodes": [
          {
            "id": 66107,
            "nodeType": "VariableDeclaration",
            "src": "816:22:134",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "weth",
            "nameLocation": "834:4:134",
            "scope": 66246,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66106,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "816:7:134",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 66123,
            "nodeType": "FunctionDefinition",
            "src": "1073:114:134",
            "nodes": [],
            "body": {
              "id": 66122,
              "nodeType": "Block",
              "src": "1101:86:134",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 66111,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1115:3:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 66112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1119:6:134",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1115:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 66113,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66107,
                      "src": "1129:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1115:18:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66121,
                  "nodeType": "IfStatement",
                  "src": "1111:70:134",
                  "trueBody": {
                    "id": 66120,
                    "nodeType": "Block",
                    "src": "1135:46:134",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66116,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1160:3:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 66117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1164:5:134",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1160:9:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 66115,
                            "name": "_ethToWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66235,
                            "src": "1149:10:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 66118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1149:21:134",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66119,
                        "nodeType": "ExpressionStatement",
                        "src": "1149:21:134"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 66108,
              "nodeType": "StructuredDocumentation",
              "src": "845:223:134",
              "text": "@notice Fallback function to receive ETH\n @notice For convenience, this contract will convert ETH to WETH always\n @notice Conversion is not done if the sender is WETH (i.e when user call `weth.withdraw()`)"
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:134"
            },
            "returnParameters": {
              "id": 66110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:134"
            },
            "scope": 66246,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66139,
            "nodeType": "FunctionDefinition",
            "src": "1412:113:134",
            "nodes": [],
            "body": {
              "id": 66138,
              "nodeType": "Block",
              "src": "1439:86:134",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 66127,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1453:3:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 66128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1457:6:134",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1453:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 66129,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66107,
                      "src": "1467:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1453:18:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66137,
                  "nodeType": "IfStatement",
                  "src": "1449:70:134",
                  "trueBody": {
                    "id": 66136,
                    "nodeType": "Block",
                    "src": "1473:46:134",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 66132,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1498:3:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 66133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1502:5:134",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1498:9:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 66131,
                            "name": "_ethToWeth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66235,
                            "src": "1487:10:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 66134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1487:21:134",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66135,
                        "nodeType": "ExpressionStatement",
                        "src": "1487:21:134"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 66124,
              "nodeType": "StructuredDocumentation",
              "src": "1193:214:134",
              "text": "@notice Function to receive ETH\n @notice For convenience, this contract will convert ETH to WETH always\n @notice Conversion is not done if the sender is WETH (i.e when user call `weth.withdraw()`)"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1419:2:134"
            },
            "returnParameters": {
              "id": 66126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1439:0:134"
            },
            "scope": 66246,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66161,
            "nodeType": "ModifierDefinition",
            "src": "1603:134:134",
            "nodes": [],
            "body": {
              "id": 66160,
              "nodeType": "Block",
              "src": "1626:111:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 66147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 66143,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1644:3:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1648:6:134",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1644:10:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 66145,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1658:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 66146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1658:7:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1644:21:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 66154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 66148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1669:3:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1673:6:134",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1669:10:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 66152,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1691:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wallet_$66246",
                                  "typeString": "contract Wallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Wallet_$66246",
                                  "typeString": "contract Wallet"
                                }
                              ],
                              "id": 66151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1683:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 66150,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1683:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1683:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1669:27:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1644:52:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572206f722073656c66",
                        "id": 66156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1698:20:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b2bc3dd3a4739eb663e1011961ce1db37b62f9bbdeb3ea69799c7c58637c9a4",
                          "typeString": "literal_string \"only owner or self\""
                        },
                        "value": "only owner or self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b2bc3dd3a4739eb663e1011961ce1db37b62f9bbdeb3ea69799c7c58637c9a4",
                          "typeString": "literal_string \"only owner or self\""
                        }
                      ],
                      "id": 66142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1636:7:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:83:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66158,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:83:134"
                },
                {
                  "id": 66159,
                  "nodeType": "PlaceholderStatement",
                  "src": "1729:1:134"
                }
              ]
            },
            "documentation": {
              "id": 66140,
              "nodeType": "StructuredDocumentation",
              "src": "1531:67:134",
              "text": "@notice Modifier to allow only the owner or the contract itself"
            },
            "name": "ownerOrSelf",
            "nameLocation": "1612:11:134",
            "parameters": {
              "id": 66141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:2:134"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66172,
            "nodeType": "FunctionDefinition",
            "src": "1799:68:134",
            "nodes": [],
            "body": {
              "id": 66171,
              "nodeType": "Block",
              "src": "1832:35:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66167,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66107,
                      "src": "1842:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66168,
                      "name": "wethAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66164,
                      "src": "1849:11:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1842:18:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66170,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:18:134"
                }
              ]
            },
            "documentation": {
              "id": 66162,
              "nodeType": "StructuredDocumentation",
              "src": "1743:51:134",
              "text": "@param wethAddress Address of the WETH contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66164,
                  "mutability": "mutable",
                  "name": "wethAddress",
                  "nameLocation": "1819:11:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 66172,
                  "src": "1811:19:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:134",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1810:21:134"
            },
            "returnParameters": {
              "id": 66166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:0:134"
            },
            "scope": 66246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66182,
            "nodeType": "FunctionDefinition",
            "src": "1913:74:134",
            "nodes": [],
            "body": {
              "id": 66181,
              "nodeType": "Block",
              "src": "1954:33:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66178,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1964:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1964:16:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66180,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:16:134"
                }
              ]
            },
            "documentation": {
              "id": 66173,
              "nodeType": "StructuredDocumentation",
              "src": "1873:35:134",
              "text": "@notice Initialize the contract"
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66175,
                  "name": "initializer",
                  "nameLocations": [
                    "1942:11:134"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 202,
                  "src": "1942:11:134"
                },
                "nodeType": "ModifierInvocation",
                "src": "1942:11:134"
              }
            ],
            "name": "initialize",
            "nameLocation": "1922:10:134",
            "parameters": {
              "id": 66174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1932:2:134"
            },
            "returnParameters": {
              "id": 66177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1954:0:134"
            },
            "scope": 66246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66211,
            "nodeType": "FunctionDefinition",
            "src": "2206:303:134",
            "nodes": [],
            "body": {
              "id": 66210,
              "nodeType": "Block",
              "src": "2296:213:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66195,
                    66197
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66195,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2312:7:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 66210,
                      "src": "2307:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66194,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2307:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66197,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "2334:6:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 66210,
                      "src": "2321:19:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 66196,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2321:5:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66202,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66189,
                        "src": "2370:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 66198,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66185,
                          "src": "2344:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2351:4:134",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2344:11:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 66201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 66200,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66187,
                          "src": "2363:5:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2344:25:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 66203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:31:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2306:69:134"
                },
                {
                  "condition": {
                    "id": 66206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2390:8:134",
                    "subExpression": {
                      "id": 66205,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66195,
                      "src": "2391:7:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66209,
                  "nodeType": "IfStatement",
                  "src": "2386:117:134",
                  "trueBody": {
                    "id": 66208,
                    "nodeType": "Block",
                    "src": "2400:103:134",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2423:70:134",
                          "nodeType": "YulBlock",
                          "src": "2423:70:134",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "result",
                                        "nativeSrc": "2452:6:134",
                                        "nodeType": "YulIdentifier",
                                        "src": "2452:6:134"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2460:2:134",
                                        "nodeType": "YulLiteral",
                                        "src": "2460:2:134",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2448:3:134",
                                      "nodeType": "YulIdentifier",
                                      "src": "2448:3:134"
                                    },
                                    "nativeSrc": "2448:15:134",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2448:15:134"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "result",
                                        "nativeSrc": "2471:6:134",
                                        "nodeType": "YulIdentifier",
                                        "src": "2471:6:134"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "2465:5:134",
                                      "nodeType": "YulIdentifier",
                                      "src": "2465:5:134"
                                    },
                                    "nativeSrc": "2465:13:134",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2465:13:134"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "2441:6:134",
                                  "nodeType": "YulIdentifier",
                                  "src": "2441:6:134"
                                },
                                "nativeSrc": "2441:38:134",
                                "nodeType": "YulFunctionCall",
                                "src": "2441:38:134"
                              },
                              "nativeSrc": "2441:38:134",
                              "nodeType": "YulExpressionStatement",
                              "src": "2441:38:134"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 66197,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2452:6:134",
                            "valueSize": 1
                          },
                          {
                            "declaration": 66197,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2471:6:134",
                            "valueSize": 1
                          }
                        ],
                        "id": 66207,
                        "nodeType": "InlineAssembly",
                        "src": "2414:79:134"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 66183,
              "nodeType": "StructuredDocumentation",
              "src": "1993:208:134",
              "text": "@notice Execute a function on an external contract\n @param target Address of the contract to call\n @param value Amount of ETH to send\n @param data Encoded data of the function to call"
            },
            "functionSelector": "b61d27f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66191,
                  "name": "ownerOrSelf",
                  "nameLocations": [
                    "2284:11:134"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66161,
                  "src": "2284:11:134"
                },
                "nodeType": "ModifierInvocation",
                "src": "2284:11:134"
              }
            ],
            "name": "execute",
            "nameLocation": "2215:7:134",
            "parameters": {
              "id": 66190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66185,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2231:6:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 66211,
                  "src": "2223:14:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:134",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66187,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2247:5:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 66211,
                  "src": "2239:13:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66189,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2269:4:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 66211,
                  "src": "2254:19:134",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66188,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2222:52:134"
            },
            "returnParameters": {
              "id": 66193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2296:0:134"
            },
            "scope": 66246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66235,
            "nodeType": "FunctionDefinition",
            "src": "2598:195:134",
            "nodes": [],
            "body": {
              "id": 66234,
              "nodeType": "Block",
              "src": "2643:150:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66218,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66218,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2659:7:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 66234,
                      "src": "2654:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66217,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2654:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 66228,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6465706f7369742829",
                            "id": 66225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2721:11:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
                              "typeString": "literal_string \"deposit()\""
                            },
                            "value": "deposit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
                              "typeString": "literal_string \"deposit()\""
                            }
                          ],
                          "expression": {
                            "id": 66223,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2697:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 66224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2701:19:134",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2697:23:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 66226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2697:36:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 66219,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66107,
                          "src": "2672:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2677:4:134",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2672:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 66222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 66221,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66214,
                          "src": "2689:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2672:24:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 66227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2672:62:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2653:81:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66230,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66218,
                        "src": "2752:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e7665727420746f2077657468206661696c6564",
                        "id": 66231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:24:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6fc7eb51fefae256f870b1891c9a27d31b7441095b881ce01d4cc0bf41a0753",
                          "typeString": "literal_string \"convert to weth failed\""
                        },
                        "value": "convert to weth failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6fc7eb51fefae256f870b1891c9a27d31b7441095b881ce01d4cc0bf41a0753",
                          "typeString": "literal_string \"convert to weth failed\""
                        }
                      ],
                      "id": 66229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2744:7:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2744:42:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66233,
                  "nodeType": "ExpressionStatement",
                  "src": "2744:42:134"
                }
              ]
            },
            "documentation": {
              "id": 66212,
              "nodeType": "StructuredDocumentation",
              "src": "2515:78:134",
              "text": "@notice Convert ETH to WETH\n @param amount Amount of ETH to convert"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ethToWeth",
            "nameLocation": "2607:10:134",
            "parameters": {
              "id": 66215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66214,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2626:6:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 66235,
                  "src": "2618:14:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2617:16:134"
            },
            "returnParameters": {
              "id": 66216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2643:0:134"
            },
            "scope": 66246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66245,
            "nodeType": "FunctionDefinition",
            "src": "2922:86:134",
            "nodes": [],
            "body": {
              "id": 66244,
              "nodeType": "Block",
              "src": "3006:2:134",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              646
            ],
            "documentation": {
              "id": 66236,
              "nodeType": "StructuredDocumentation",
              "src": "2799:118:134",
              "text": "@notice Upgrade the implementation of the proxy\n @param newImplementation Address of the new implementation"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66242,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66241,
                  "name": "ownerOrSelf",
                  "nameLocations": [
                    "2994:11:134"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66161,
                  "src": "2994:11:134"
                },
                "nodeType": "ModifierInvocation",
                "src": "2994:11:134"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "2931:17:134",
            "overrides": {
              "id": 66240,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2985:8:134"
            },
            "parameters": {
              "id": 66239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66238,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "2957:17:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 66245,
                  "src": "2949:25:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:134",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:27:134"
            },
            "returnParameters": {
              "id": 66243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3006:0:134"
            },
            "scope": 66246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66100,
              "name": "TokenCallbackHandler",
              "nameLocations": [
                "752:20:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5072,
              "src": "752:20:134"
            },
            "id": 66101,
            "nodeType": "InheritanceSpecifier",
            "src": "752:20:134"
          },
          {
            "baseName": {
              "id": 66102,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "774:18:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131,
              "src": "774:18:134"
            },
            "id": 66103,
            "nodeType": "InheritanceSpecifier",
            "src": "774:18:134"
          },
          {
            "baseName": {
              "id": 66104,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "794:15:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 647,
              "src": "794:15:134"
            },
            "id": 66105,
            "nodeType": "InheritanceSpecifier",
            "src": "794:15:134"
          }
        ],
        "canonicalName": "Wallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66099,
          "nodeType": "StructuredDocumentation",
          "src": "402:331:134",
          "text": "@title EmailWallet\n @notice Simple Wallet contract to be used as the EmailWallet for users\n @notice This wallet can `execute` any function on any contract provided calle is `owner`\n @notice The deployed is the `owner` by default (EmailWalletCore)\n @dev External contracts should use `call` to deposit ETH if needed"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66246,
          647,
          96277,
          129025,
          96339,
          131,
          95621,
          300,
          5072,
          753,
          3812,
          2855,
          2875
        ],
        "name": "Wallet",
        "nameLocation": "742:6:134",
        "scope": 66247,
        "usedErrors": [],
        "usedEvents": [
          16,
          146,
          129012,
          129019,
          129024
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 134
}